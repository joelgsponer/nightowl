
R version 4.5.0 (2025-04-11) -- "How About a Twenty-Six"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin24.4.0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> devtools::test()
ℹ Testing nightowl
Registered S3 method overwritten by 'GGally':
  method from   
  +.gg   ggplot2
Registered S3 methods overwritten by 'ggpp':
  method                  from   
  heightDetails.titleGrob ggplot2
  widthDetails.titleGrob  ggplot2
ℹ Setting up Nightowl
✔ Setting up Nightowl [11ms]

✔ | F W  S  OK | Context

⠏ |          0 | ci                                                             
✔ |          1 | ci

⠏ |          0 | coxph                                                          
⠹ |   3      0 | coxph                                                                                                                                                                                                                                          prior 
                                                                                                                                                                                  "l" 
                                                                                                                                                                                 Term 
                                                                                                                                                                                  "l" 
                                                                                                                                                                           Comparison 
                                                                                                                                                                                  "l" 
  <div\n  style= 'font-size: smaller;display:flex; flex-direction:column;align-items:center;'>\n  <div>log(HR)</div>\n  <div>← Comparison better | Reference better →</div>\n  </div> 
                                                                                                                                                                                  "l" 
                                                                                                                                                                            Reference 
                                                                                                                                                                                  "l" 
                                                                                                                                                                         Hazard Ratio 
                                                                                                                                                                                  "l" 
                                                                                                                                                                              p Value 
                                                                                                                                                                                  "l" 
                                                                                                                                                                             Events/N 
                                                                                                                                                                                  "l" 
[1] "l" "l" "c" "l" "c" "l" "l" "l"

⠼ |   5      0 | coxph                                                          
⠴ |   6      0 | coxph                                                                                                                                                                                                                                          prior 
                                                                                                                                                                                  "l" 
                                                                                                                                                                                 Term 
                                                                                                                                                                                  "l" 
                                                                                                                                                                           Comparison 
                                                                                                                                                                                  "l" 
  <div\n  style= 'font-size: smaller;display:flex; flex-direction:column;align-items:center;'>\n  <div>log(HR)</div>\n  <div>← Comparison better | Reference better →</div>\n  </div> 
                                                                                                                                                                                  "l" 
                                                                                                                                                                            Reference 
                                                                                                                                                                                  "l" 
                                                                                                                                                                         Hazard Ratio 
                                                                                                                                                                                  "l" 
                                                                                                                                                                              p Value 
                                                                                                                                                                                  "l" 
                                                                                                                                                                             Events/N 
                                                                                                                                                                                  "l" 
[1] "l" "l" "c" "l" "c" "l" "l" "l"

⠧ |   8      0 | coxph                                                                                                                                                                                                                                          prior 
                                                                                                                                                                                  "l" 
                                                                                                                                                                                 Term 
                                                                                                                                                                                  "l" 
                                                                                                                                                                           Comparison 
                                                                                                                                                                                  "l" 
  <div\n  style= 'font-size: smaller;display:flex; flex-direction:column;align-items:center;'>\n  <div>log(HR)</div>\n  <div>← Comparison better | Reference better →</div>\n  </div> 
                                                                                                                                                                                  "l" 
                                                                                                                                                                            Reference 
                                                                                                                                                                                  "l" 
                                                                                                                                                                         Hazard Ratio 
                                                                                                                                                                                  "l" 
                                                                                                                                                                              p Value 
                                                                                                                                                                                  "l" 
                                                                                                                                                                             Events/N 
                                                                                                                                                                                  "l" 
[1] "l" "l" "c" "l" "c" "l" "l" "l"

⠏ |   10      0 | coxph                                                         
⠸ |   12      2 | coxph                                                                                                                                                                                                                                      Subgroup 
                                                                                                                                                                                  "l" 
                                                                                                                                                                                 Term 
                                                                                                                                                                                  "l" 
                                                                                                                                                                           Comparison 
                                                                                                                                                                                  "l" 
  <div\n  style= 'font-size: smaller;display:flex; flex-direction:column;align-items:center;'>\n  <div>log(HR)</div>\n  <div>← Comparison better | Reference better →</div>\n  </div> 
                                                                                                                                                                                  "l" 
                                                                                                                                                                            Reference 
                                                                                                                                                                                  "l" 
                                                                                                                                                                         Hazard Ratio 
                                                                                                                                                                                  "l" 
                                                                                                                                                                              p Value 
                                                                                                                                                                                  "l" 
                                                                                                                                                                             Events/N 
                                                                                                                                                                                  "l" 
[1] "l" "l" "c" "l" "c" "l" "l" "l"

⠴ |   14      2 | coxph                                                         
⠼ |   23      2 | coxph                                                         
⠦ |   25      2 | coxph                                                         
⠇ |   27      2 | coxph                                                         
⠋ |   29      2 | coxph                                                         
⠹ |   31      2 | coxph                                                                                                                                                                                                                                         split 
                                                                                                                                                                                  "l" 
                                                                                                                                                                                 Term 
                                                                                                                                                                                  "l" 
                                                                                                                                                                           Comparison 
                                                                                                                                                                                  "l" 
  <div\n  style= 'font-size: smaller;display:flex; flex-direction:column;align-items:center;'>\n  <div>log(HR)</div>\n  <div>← Comparison better | Reference better →</div>\n  </div> 
                                                                                                                                                                                  "l" 
                                                                                                                                                                            Reference 
                                                                                                                                                                                  "l" 
                                                                                                                                                                         Hazard Ratio 
                                                                                                                                                                                  "l" 
                                                                                                                                                                              p Value 
                                                                                                                                                                                  "l" 
                                                                                                                                                                             Events/N 
                                                                                                                                                                                  "l" 
[1] "l" "l" "c" "l" "c" "l" "l" "l"

⠼ |   33      2 | coxph                                                         
✖ | 1 33      2 | coxph [4.1s]
────────────────────────────────────────────────────────────────────────────────
Warning ('test-coxph.R:42:3'): coxph works
Using an external vector in selections was deprecated in tidyselect 1.1.0.
ℹ Please use `all_of()` or `any_of()` instead.
  # Was:
  data %>% select(.var)

  # Now:
  data %>% select(all_of(.var))

See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
Backtrace:
     ▆
  1. ├─basic$output(keep_only_treatment = FALSE) at test-coxph.R:42:3
  2. │ ├─... %>% htmltools::browsable() at 42-resolve-masking/R/coxph.R:814:7
  3. │ └─self$html(drop = drop, keep_only_treatment = keep_only_treatment)
  4. │   ├─shiny::HTML(self$kable(drop = drop, keep_only_treatment = keep_only_treatment)) at 42-resolve-masking/R/coxph.R:809:7
  5. │   └─self$kable(drop = drop, keep_only_treatment = keep_only_treatment)
  6. │     └─self$raw(drop = drop, keep_only_treatment = keep_only_treatment) at 42-resolve-masking/R/coxph.R:796:7
  7. │       ├─... %>% dplyr::distinct() at 42-resolve-masking/R/coxph.R:450:7
  8. │       ├─dplyr::inner_join(self$N(), dplyr::bind_rows(self$results()))
  9. │       └─self$N()
 10. │         ├─... %>% dplyr::bind_rows() at 42-resolve-masking/R/coxph.R:299:7
 11. │         └─purrr::imap(...)
 12. │           └─purrr::map2(.x, vec_index(.x), .f, ...)
 13. │             └─purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
 14. │               ├─purrr:::with_indexed_errors(...)
 15. │               │ └─base::withCallingHandlers(...)
 16. │               ├─purrr:::call_with_cleanup(...)
 17. │               └─nightowl (local) .f(.x[[i]], .y[[i]], ...)
 18. │                 ├─... %>% dplyr::bind_rows() at 42-resolve-masking/R/coxph.R:300:9
 19. │                 └─purrr::map(...)
 20. │                   └─purrr:::map_("list", .x, .f, ..., .progress = .progress)
 21. │                     ├─purrr:::with_indexed_errors(...)
 22. │                     │ └─base::withCallingHandlers(...)
 23. │                     ├─purrr:::call_with_cleanup(...)
 24. │                     └─nightowl (local) .f(.x[[i]], ...)
 25. │                       └─... %>% dplyr::mutate(comparison = as.character(comparison)) at 42-resolve-masking/R/coxph.R:330:13
 26. ├─htmltools::browsable(.)
 27. ├─shiny::div(...)
 28. │ └─rlang::dots_list(...)
 29. ├─dplyr::distinct(.)
 30. ├─dplyr::bind_rows(.)
 31. │ └─rlang::list2(...)
 32. ├─dplyr::bind_rows(.)
 33. │ └─rlang::list2(...)
 34. ├─dplyr::mutate(., comparison = as.character(comparison))
 35. ├─dplyr::mutate(., term = .var)
 36. ├─dplyr::rename(., comparison = .var)
 37. └─dplyr:::rename.data.frame(., comparison = .var)
 38.   └─tidyselect::eval_rename(expr(c(...)), .data)
 39.     └─tidyselect:::rename_impl(...)
 40.       └─tidyselect:::eval_select_impl(...)
 41.         ├─tidyselect:::with_subscript_errors(...)
 42.         │ └─base::withCallingHandlers(...)
 43.         └─tidyselect:::vars_select_eval(...)
 44.           └─tidyselect:::walk_data_tree(expr, data_mask, context_mask)
 45.             └─tidyselect:::eval_c(expr, data_mask, context_mask)
 46.               └─tidyselect:::reduce_sels(node, data_mask, context_mask, init = init)
 47.                 └─tidyselect:::walk_data_tree(new, data_mask, context_mask)
 48.                   └─tidyselect:::eval_sym(expr, data_mask, context_mask)

Warning ('test-coxph.R:42:3'): coxph works
Returning more (or less) than 1 row per `summarise()` group was deprecated in
dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`
  always returns an ungrouped data frame and adjust accordingly.
Backtrace:
     ▆
  1. ├─basic$output(keep_only_treatment = FALSE) at test-coxph.R:42:3
  2. │ ├─... %>% htmltools::browsable() at 42-resolve-masking/R/coxph.R:814:7
  3. │ └─self$html(drop = drop, keep_only_treatment = keep_only_treatment)
  4. │   ├─shiny::HTML(self$kable(drop = drop, keep_only_treatment = keep_only_treatment)) at 42-resolve-masking/R/coxph.R:809:7
  5. │   └─self$kable(drop = drop, keep_only_treatment = keep_only_treatment)
  6. │     └─self$raw(drop = drop, keep_only_treatment = keep_only_treatment) at 42-resolve-masking/R/coxph.R:796:7
  7. │       ├─... %>% dplyr::distinct() at 42-resolve-masking/R/coxph.R:450:7
  8. │       ├─dplyr::inner_join(self$N(), dplyr::bind_rows(self$results()))
  9. │       └─self$N()
 10. │         ├─... %>% dplyr::bind_rows() at 42-resolve-masking/R/coxph.R:299:7
 11. │         └─purrr::imap(...)
 12. │           └─purrr::map2(.x, vec_index(.x), .f, ...)
 13. │             └─purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
 14. │               ├─purrr:::with_indexed_errors(...)
 15. │               │ └─base::withCallingHandlers(...)
 16. │               ├─purrr:::call_with_cleanup(...)
 17. │               └─nightowl (local) .f(.x[[i]], .y[[i]], ...)
 18. │                 └─... %>% dplyr::select(-event) at 42-resolve-masking/R/coxph.R:349:9
 19. ├─htmltools::browsable(.)
 20. ├─shiny::div(...)
 21. │ └─rlang::dots_list(...)
 22. ├─dplyr::distinct(.)
 23. ├─dplyr::bind_rows(.)
 24. │ └─rlang::list2(...)
 25. ├─dplyr::select(., -event)
 26. ├─dplyr::filter(., event == "1")
 27. ├─dplyr::summarise(., N = sum(n, na.rm = T), event = !!rlang::sym(variables$event))
 28. └─dplyr:::summarise.grouped_df(., N = sum(n, na.rm = T), event = !!rlang::sym(variables$event))
 29.   └─dplyr:::summarise_deprecate_variable_size()

Warning ('test-coxph.R:42:3'): coxph works
Returning more (or less) than 1 row per `summarise()` group was deprecated in
dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`
  always returns an ungrouped data frame and adjust accordingly.
Backtrace:
     ▆
  1. ├─basic$output(keep_only_treatment = FALSE) at test-coxph.R:42:3
  2. │ ├─... %>% htmltools::browsable() at 42-resolve-masking/R/coxph.R:814:7
  3. │ └─self$html(drop = drop, keep_only_treatment = keep_only_treatment)
  4. │   ├─shiny::HTML(self$kable(drop = drop, keep_only_treatment = keep_only_treatment)) at 42-resolve-masking/R/coxph.R:809:7
  5. │   └─self$kable(drop = drop, keep_only_treatment = keep_only_treatment)
  6. │     └─self$raw(drop = drop, keep_only_treatment = keep_only_treatment) at 42-resolve-masking/R/coxph.R:796:7
  7. │       ├─... %>% dplyr::distinct() at 42-resolve-masking/R/coxph.R:450:7
  8. │       ├─dplyr::inner_join(self$N(), dplyr::bind_rows(self$results()))
  9. │       └─self$N()
 10. │         ├─... %>% dplyr::bind_rows() at 42-resolve-masking/R/coxph.R:299:7
 11. │         └─purrr::imap(...)
 12. │           └─purrr::map2(.x, vec_index(.x), .f, ...)
 13. │             └─purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
 14. │               ├─purrr:::with_indexed_errors(...)
 15. │               │ └─base::withCallingHandlers(...)
 16. │               ├─purrr:::call_with_cleanup(...)
 17. │               └─nightowl (local) .f(.x[[i]], .y[[i]], ...)
 18. │                 └─... %>% dplyr::select(-event) at 42-resolve-masking/R/coxph.R:349:9
 19. ├─htmltools::browsable(.)
 20. ├─shiny::div(...)
 21. │ └─rlang::dots_list(...)
 22. ├─dplyr::distinct(.)
 23. ├─dplyr::bind_rows(.)
 24. │ └─rlang::list2(...)
 25. ├─dplyr::select(., -event)
 26. ├─dplyr::filter(., event == "1")
 27. ├─dplyr::summarise(., N = sum(n, na.rm = T), event = !!rlang::sym(variables$event))
 28. └─dplyr:::summarise.grouped_df(., N = sum(n, na.rm = T), event = !!rlang::sym(variables$event))
 29.   └─dplyr:::summarise_deprecate_variable_size()

Warning ('test-coxph.R:42:3'): coxph works
Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.
ℹ Please use `linewidth` instead.
Backtrace:
     ▆
  1. ├─basic$output(keep_only_treatment = FALSE) at test-coxph.R:42:3
  2. │ ├─... %>% htmltools::browsable() at 42-resolve-masking/R/coxph.R:814:7
  3. │ └─self$html(drop = drop, keep_only_treatment = keep_only_treatment)
  4. │   ├─shiny::HTML(self$kable(drop = drop, keep_only_treatment = keep_only_treatment)) at 42-resolve-masking/R/coxph.R:809:7
  5. │   └─self$kable(drop = drop, keep_only_treatment = keep_only_treatment)
  6. │     └─self$raw(drop = drop, keep_only_treatment = keep_only_treatment) at 42-resolve-masking/R/coxph.R:796:7
  7. │       └─... %>% dplyr::bind_rows() at 42-resolve-masking/R/coxph.R:477:7
  8. ├─htmltools::browsable(.)
  9. ├─shiny::div(...)
 10. │ └─rlang::dots_list(...)
 11. ├─dplyr::bind_rows(.)
 12. │ └─rlang::list2(...)
 13. └─purrr::map(...)
 14.   └─purrr:::map_("list", .x, .f, ..., .progress = .progress)
 15.     ├─purrr:::with_indexed_errors(...)
 16.     │ └─base::withCallingHandlers(...)
 17.     ├─purrr:::call_with_cleanup(...)
 18.     └─nightowl (local) .f(.x[[i]], ...)
 19.       ├─base::tryCatch(...) at 42-resolve-masking/R/coxph.R:481:11
 20.       │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 21.       │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 22.       │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 23.       └─nightowl::add_inline_forestplot(...) at 42-resolve-masking/R/coxph.R:483:15
 24.         └─ggplot2::geom_vline(...) at 42-resolve-masking/R/inline_plots.R:24:3
 25.           └─ggplot2::layer(...)
 26.             └─ggplot2:::deprecate_soft0(...)

Warning ('test-coxph.R:42:3'): coxph works
The `size` argument of `element_line()` is deprecated as of ggplot2 3.4.0.
ℹ Please use the `linewidth` argument instead.
Backtrace:
     ▆
  1. ├─basic$output(keep_only_treatment = FALSE) at test-coxph.R:42:3
  2. │ ├─... %>% htmltools::browsable() at 42-resolve-masking/R/coxph.R:814:7
  3. │ └─self$html(drop = drop, keep_only_treatment = keep_only_treatment)
  4. │   ├─shiny::HTML(self$kable(drop = drop, keep_only_treatment = keep_only_treatment)) at 42-resolve-masking/R/coxph.R:809:7
  5. │   └─self$kable(drop = drop, keep_only_treatment = keep_only_treatment)
  6. │     ├─base::do.call(...) at 42-resolve-masking/R/coxph.R:804:7
  7. │     └─nightowl (local) `<fn>`(...)
  8. │       └─nightowl::add_scale(.tbl) at 42-resolve-masking/R/tables.R:54:3
  9. │         └─purrr::map(...) at 42-resolve-masking/R/inline_plots.R:389:3
 10. │           └─purrr:::map_("list", .x, .f, ..., .progress = .progress)
 11. │             ├─purrr:::with_indexed_errors(...)
 12. │             │ └─base::withCallingHandlers(...)
 13. │             ├─purrr:::call_with_cleanup(...)
 14. │             └─nightowl (local) .f(.x[[i]], ...)
 15. │               ├─ggplot2::theme(...) at 42-resolve-masking/R/inline_plots.R:396:5
 16. │               │ └─ggplot2:::find_args(..., complete = NULL, validate = NULL)
 17. │               │   └─base::mget(args, envir = env)
 18. │               └─ggplot2::element_line(colour = "black", size = ggplot2::rel(line_size))
 19. │                 └─ggplot2:::deprecate_soft0("3.4.0", "element_line(size)", "element_line(linewidth)")
 20. ├─htmltools::browsable(.)
 21. └─shiny::div(...)
 22.   └─rlang::dots_list(...)

Warning ('test-coxph.R:44:3'): coxph works
Returning more (or less) than 1 row per `summarise()` group was deprecated in
dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`
  always returns an ungrouped data frame and adjust accordingly.
Backtrace:
     ▆
  1. ├─basic$kable() at test-coxph.R:44:3
  2. │ └─self$raw(drop = drop, keep_only_treatment = keep_only_treatment) at 42-resolve-masking/R/coxph.R:796:7
  3. │   ├─... %>% dplyr::distinct() at 42-resolve-masking/R/coxph.R:450:7
  4. │   ├─dplyr::inner_join(self$N(), dplyr::bind_rows(self$results()))
  5. │   └─self$N()
  6. │     ├─... %>% dplyr::bind_rows() at 42-resolve-masking/R/coxph.R:299:7
  7. │     └─purrr::imap(...)
  8. │       └─purrr::map2(.x, vec_index(.x), .f, ...)
  9. │         └─purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
 10. │           ├─purrr:::with_indexed_errors(...)
 11. │           │ └─base::withCallingHandlers(...)
 12. │           ├─purrr:::call_with_cleanup(...)
 13. │           └─nightowl (local) .f(.x[[i]], .y[[i]], ...)
 14. │             └─... %>% dplyr::select(-event) at 42-resolve-masking/R/coxph.R:349:9
 15. ├─dplyr::distinct(.)
 16. ├─dplyr::bind_rows(.)
 17. │ └─rlang::list2(...)
 18. ├─dplyr::select(., -event)
 19. ├─dplyr::filter(., event == "1")
 20. ├─dplyr::summarise(., N = sum(n, na.rm = T), event = !!rlang::sym(variables$event))
 21. └─dplyr:::summarise.grouped_df(., N = sum(n, na.rm = T), event = !!rlang::sym(variables$event))
 22.   └─dplyr:::summarise_deprecate_variable_size()

Warning ('test-coxph.R:44:3'): coxph works
Returning more (or less) than 1 row per `summarise()` group was deprecated in
dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`
  always returns an ungrouped data frame and adjust accordingly.
Backtrace:
     ▆
  1. ├─basic$kable() at test-coxph.R:44:3
  2. │ └─self$raw(drop = drop, keep_only_treatment = keep_only_treatment) at 42-resolve-masking/R/coxph.R:796:7
  3. │   ├─... %>% dplyr::distinct() at 42-resolve-masking/R/coxph.R:450:7
  4. │   ├─dplyr::inner_join(self$N(), dplyr::bind_rows(self$results()))
  5. │   └─self$N()
  6. │     ├─... %>% dplyr::bind_rows() at 42-resolve-masking/R/coxph.R:299:7
  7. │     └─purrr::imap(...)
  8. │       └─purrr::map2(.x, vec_index(.x), .f, ...)
  9. │         └─purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
 10. │           ├─purrr:::with_indexed_errors(...)
 11. │           │ └─base::withCallingHandlers(...)
 12. │           ├─purrr:::call_with_cleanup(...)
 13. │           └─nightowl (local) .f(.x[[i]], .y[[i]], ...)
 14. │             └─... %>% dplyr::select(-event) at 42-resolve-masking/R/coxph.R:349:9
 15. ├─dplyr::distinct(.)
 16. ├─dplyr::bind_rows(.)
 17. │ └─rlang::list2(...)
 18. ├─dplyr::select(., -event)
 19. ├─dplyr::filter(., event == "1")
 20. ├─dplyr::summarise(., N = sum(n, na.rm = T), event = !!rlang::sym(variables$event))
 21. └─dplyr:::summarise.grouped_df(., N = sum(n, na.rm = T), event = !!rlang::sym(variables$event))
 22.   └─dplyr:::summarise_deprecate_variable_size()

Warning ('test-coxph.R:45:3'): coxph works
Returning more (or less) than 1 row per `summarise()` group was deprecated in
dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`
  always returns an ungrouped data frame and adjust accordingly.
Backtrace:
     ▆
  1. ├─basic$kable(keep_only_treatment = FALSE) at test-coxph.R:45:3
  2. │ └─self$raw(drop = drop, keep_only_treatment = keep_only_treatment) at 42-resolve-masking/R/coxph.R:796:7
  3. │   ├─... %>% dplyr::distinct() at 42-resolve-masking/R/coxph.R:450:7
  4. │   ├─dplyr::inner_join(self$N(), dplyr::bind_rows(self$results()))
  5. │   └─self$N()
  6. │     ├─... %>% dplyr::bind_rows() at 42-resolve-masking/R/coxph.R:299:7
  7. │     └─purrr::imap(...)
  8. │       └─purrr::map2(.x, vec_index(.x), .f, ...)
  9. │         └─purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
 10. │           ├─purrr:::with_indexed_errors(...)
 11. │           │ └─base::withCallingHandlers(...)
 12. │           ├─purrr:::call_with_cleanup(...)
 13. │           └─nightowl (local) .f(.x[[i]], .y[[i]], ...)
 14. │             └─... %>% dplyr::select(-event) at 42-resolve-masking/R/coxph.R:349:9
 15. ├─dplyr::distinct(.)
 16. ├─dplyr::bind_rows(.)
 17. │ └─rlang::list2(...)
 18. ├─dplyr::select(., -event)
 19. ├─dplyr::filter(., event == "1")
 20. ├─dplyr::summarise(., N = sum(n, na.rm = T), event = !!rlang::sym(variables$event))
 21. └─dplyr:::summarise.grouped_df(., N = sum(n, na.rm = T), event = !!rlang::sym(variables$event))
 22.   └─dplyr:::summarise_deprecate_variable_size()

Warning ('test-coxph.R:45:3'): coxph works
Returning more (or less) than 1 row per `summarise()` group was deprecated in
dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`
  always returns an ungrouped data frame and adjust accordingly.
Backtrace:
     ▆
  1. ├─basic$kable(keep_only_treatment = FALSE) at test-coxph.R:45:3
  2. │ └─self$raw(drop = drop, keep_only_treatment = keep_only_treatment) at 42-resolve-masking/R/coxph.R:796:7
  3. │   ├─... %>% dplyr::distinct() at 42-resolve-masking/R/coxph.R:450:7
  4. │   ├─dplyr::inner_join(self$N(), dplyr::bind_rows(self$results()))
  5. │   └─self$N()
  6. │     ├─... %>% dplyr::bind_rows() at 42-resolve-masking/R/coxph.R:299:7
  7. │     └─purrr::imap(...)
  8. │       └─purrr::map2(.x, vec_index(.x), .f, ...)
  9. │         └─purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
 10. │           ├─purrr:::with_indexed_errors(...)
 11. │           │ └─base::withCallingHandlers(...)
 12. │           ├─purrr:::call_with_cleanup(...)
 13. │           └─nightowl (local) .f(.x[[i]], .y[[i]], ...)
 14. │             └─... %>% dplyr::select(-event) at 42-resolve-masking/R/coxph.R:349:9
 15. ├─dplyr::distinct(.)
 16. ├─dplyr::bind_rows(.)
 17. │ └─rlang::list2(...)
 18. ├─dplyr::select(., -event)
 19. ├─dplyr::filter(., event == "1")
 20. ├─dplyr::summarise(., N = sum(n, na.rm = T), event = !!rlang::sym(variables$event))
 21. └─dplyr:::summarise.grouped_df(., N = sum(n, na.rm = T), event = !!rlang::sym(variables$event))
 22.   └─dplyr:::summarise_deprecate_variable_size()

Warning ('test-coxph.R:47:3'): coxph works
Returning more (or less) than 1 row per `summarise()` group was deprecated in
dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`
  always returns an ungrouped data frame and adjust accordingly.
Backtrace:
     ▆
  1. ├─basic$raw() at test-coxph.R:47:3
  2. │ ├─... %>% dplyr::distinct() at 42-resolve-masking/R/coxph.R:450:7
  3. │ ├─dplyr::inner_join(self$N(), dplyr::bind_rows(self$results()))
  4. │ └─self$N()
  5. │   ├─... %>% dplyr::bind_rows() at 42-resolve-masking/R/coxph.R:299:7
  6. │   └─purrr::imap(...)
  7. │     └─purrr::map2(.x, vec_index(.x), .f, ...)
  8. │       └─purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
  9. │         ├─purrr:::with_indexed_errors(...)
 10. │         │ └─base::withCallingHandlers(...)
 11. │         ├─purrr:::call_with_cleanup(...)
 12. │         └─nightowl (local) .f(.x[[i]], .y[[i]], ...)
 13. │           └─... %>% dplyr::select(-event) at 42-resolve-masking/R/coxph.R:349:9
 14. ├─dplyr::distinct(.)
 15. ├─dplyr::bind_rows(.)
 16. │ └─rlang::list2(...)
 17. ├─dplyr::select(., -event)
 18. ├─dplyr::filter(., event == "1")
 19. ├─dplyr::summarise(., N = sum(n, na.rm = T), event = !!rlang::sym(variables$event))
 20. └─dplyr:::summarise.grouped_df(., N = sum(n, na.rm = T), event = !!rlang::sym(variables$event))
 21.   └─dplyr:::summarise_deprecate_variable_size()

Warning ('test-coxph.R:47:3'): coxph works
Returning more (or less) than 1 row per `summarise()` group was deprecated in
dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`
  always returns an ungrouped data frame and adjust accordingly.
Backtrace:
     ▆
  1. ├─basic$raw() at test-coxph.R:47:3
  2. │ ├─... %>% dplyr::distinct() at 42-resolve-masking/R/coxph.R:450:7
  3. │ ├─dplyr::inner_join(self$N(), dplyr::bind_rows(self$results()))
  4. │ └─self$N()
  5. │   ├─... %>% dplyr::bind_rows() at 42-resolve-masking/R/coxph.R:299:7
  6. │   └─purrr::imap(...)
  7. │     └─purrr::map2(.x, vec_index(.x), .f, ...)
  8. │       └─purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
  9. │         ├─purrr:::with_indexed_errors(...)
 10. │         │ └─base::withCallingHandlers(...)
 11. │         ├─purrr:::call_with_cleanup(...)
 12. │         └─nightowl (local) .f(.x[[i]], .y[[i]], ...)
 13. │           └─... %>% dplyr::select(-event) at 42-resolve-masking/R/coxph.R:349:9
 14. ├─dplyr::distinct(.)
 15. ├─dplyr::bind_rows(.)
 16. │ └─rlang::list2(...)
 17. ├─dplyr::select(., -event)
 18. ├─dplyr::filter(., event == "1")
 19. ├─dplyr::summarise(., N = sum(n, na.rm = T), event = !!rlang::sym(variables$event))
 20. └─dplyr:::summarise.grouped_df(., N = sum(n, na.rm = T), event = !!rlang::sym(variables$event))
 21.   └─dplyr:::summarise_deprecate_variable_size()

Warning ('test-coxph.R:81:3'): coxph works
Returning more (or less) than 1 row per `summarise()` group was deprecated in
dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`
  always returns an ungrouped data frame and adjust accordingly.
Backtrace:
     ▆
  1. ├─basic_numeric$N() at test-coxph.R:81:3
  2. │ ├─... %>% dplyr::bind_rows() at 42-resolve-masking/R/coxph.R:299:7
  3. │ └─purrr::imap(...)
  4. │   └─purrr::map2(.x, vec_index(.x), .f, ...)
  5. │     └─purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
  6. │       ├─purrr:::with_indexed_errors(...)
  7. │       │ └─base::withCallingHandlers(...)
  8. │       ├─purrr:::call_with_cleanup(...)
  9. │       └─nightowl (local) .f(.x[[i]], .y[[i]], ...)
 10. │         └─... %>% dplyr::select(-event) at 42-resolve-masking/R/coxph.R:349:9
 11. ├─dplyr::bind_rows(.)
 12. │ └─rlang::list2(...)
 13. ├─dplyr::select(., -event)
 14. ├─dplyr::filter(., event == "1")
 15. ├─dplyr::summarise(., N = sum(n, na.rm = T), event = !!rlang::sym(variables$event))
 16. └─dplyr:::summarise.grouped_df(., N = sum(n, na.rm = T), event = !!rlang::sym(variables$event))
 17.   └─dplyr:::summarise_deprecate_variable_size()

Warning ('test-coxph.R:82:3'): coxph works
Returning more (or less) than 1 row per `summarise()` group was deprecated in
dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`
  always returns an ungrouped data frame and adjust accordingly.
Backtrace:
     ▆
  1. ├─basic_numeric$output() at test-coxph.R:82:3
  2. │ ├─... %>% htmltools::browsable() at 42-resolve-masking/R/coxph.R:814:7
  3. │ └─self$html(drop = drop, keep_only_treatment = keep_only_treatment)
  4. │   ├─shiny::HTML(self$kable(drop = drop, keep_only_treatment = keep_only_treatment)) at 42-resolve-masking/R/coxph.R:809:7
  5. │   └─self$kable(drop = drop, keep_only_treatment = keep_only_treatment)
  6. │     └─self$raw(drop = drop, keep_only_treatment = keep_only_treatment) at 42-resolve-masking/R/coxph.R:796:7
  7. │       ├─... %>% dplyr::distinct() at 42-resolve-masking/R/coxph.R:450:7
  8. │       ├─dplyr::inner_join(self$N(), dplyr::bind_rows(self$results()))
  9. │       └─self$N()
 10. │         ├─... %>% dplyr::bind_rows() at 42-resolve-masking/R/coxph.R:299:7
 11. │         └─purrr::imap(...)
 12. │           └─purrr::map2(.x, vec_index(.x), .f, ...)
 13. │             └─purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
 14. │               ├─purrr:::with_indexed_errors(...)
 15. │               │ └─base::withCallingHandlers(...)
 16. │               ├─purrr:::call_with_cleanup(...)
 17. │               └─nightowl (local) .f(.x[[i]], .y[[i]], ...)
 18. │                 └─... %>% dplyr::select(-event) at 42-resolve-masking/R/coxph.R:349:9
 19. ├─htmltools::browsable(.)
 20. ├─shiny::div(...)
 21. │ └─rlang::dots_list(...)
 22. ├─dplyr::distinct(.)
 23. ├─dplyr::bind_rows(.)
 24. │ └─rlang::list2(...)
 25. ├─dplyr::select(., -event)
 26. ├─dplyr::filter(., event == "1")
 27. ├─dplyr::summarise(., N = sum(n, na.rm = T), event = !!rlang::sym(variables$event))
 28. └─dplyr:::summarise.grouped_df(., N = sum(n, na.rm = T), event = !!rlang::sym(variables$event))
 29.   └─dplyr:::summarise_deprecate_variable_size()

Warning ('test-coxph.R:82:3'): coxph works
There were 2 warnings in `mutate()`.
The first warning was:
ℹ In argument: ` <div style= 'font-size: smaller;display:flex;
  flex-direction:column;align-items:center;'> <div>log(HR)</div> <div>←
  Comparison better | Reference better →</div> </div> =
  .Primitive("as.character")(` <div\n style= 'font-size: smaller;display:flex;
  flex-direction:column;align-items:center;'>\n <div>log(HR)</div>\n <div>←
  Comparison better | Reference better →</div>\n </div>`)`.
Caused by warning:
! Removed 1 row containing missing values or values outside the scale range
(`geom_vline()`).
ℹ Run `dplyr::last_dplyr_warnings()` to see the 1 remaining warning.
Backtrace:
     ▆
  1. ├─basic_numeric$output() at test-coxph.R:82:3
  2. │ ├─... %>% htmltools::browsable() at 42-resolve-masking/R/coxph.R:814:7
  3. │ └─self$html(drop = drop, keep_only_treatment = keep_only_treatment)
  4. │   ├─shiny::HTML(self$kable(drop = drop, keep_only_treatment = keep_only_treatment)) at 42-resolve-masking/R/coxph.R:809:7
  5. │   └─self$kable(drop = drop, keep_only_treatment = keep_only_treatment)
  6. │     ├─base::do.call(...) at 42-resolve-masking/R/coxph.R:804:7
  7. │     └─nightowl (local) `<fn>`(...)
  8. │       └─dplyr::mutate_if(.tbl, nightowl::is_NightowlPlots, as.character) at 42-resolve-masking/R/tables.R:57:3
  9. │         ├─dplyr::mutate(.tbl, !!!funs)
 10. │         └─dplyr:::mutate.data.frame(.tbl, !!!funs)
 11. │           └─dplyr:::mutate_cols(.data, dplyr_quosures(...), by)
 12. │             └─dplyr:::signal_warnings(warnings_state, error_call)
 13. ├─htmltools::browsable(.)
 14. └─shiny::div(...)
 15.   └─rlang::dots_list(...)

Warning ('test-coxph.R:95:3'): coxph works
Ran out of iterations and did not converge
Backtrace:
     ▆
  1. └─nightowl::Coxph$new(...) at test-coxph.R:95:3
  2.   └─nightowl (local) initialize(...)
  3.     └─self$fit() at 42-resolve-masking/R/coxph.R:17:7
  4.       └─purrr::map(...) at 42-resolve-masking/R/coxph.R:225:7
  5.         └─purrr:::map_("list", .x, .f, ..., .progress = .progress)
  6.           ├─purrr:::with_indexed_errors(...)
  7.           │ └─base::withCallingHandlers(...)
  8.           ├─purrr:::call_with_cleanup(...)
  9.           └─purrr (local) .f(.x[[i]], ...)
 10.             ├─purrr:::capture_error(.f(...), otherwise, quiet)
 11.             │ └─base::tryCatch(...)
 12.             │   └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 13.             │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 14.             │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 15.             └─nightowl (local) .f(...)
 16.               ├─base::do.call(...) at 42-resolve-masking/R/coxph.R:226:9
 17.               └─survival (local) `<fn>`(...)
 18.                 └─survival::coxph.fit(...)

Warning ('test-coxph.R:95:3'): coxph works
Ran out of iterations and did not converge
Backtrace:
     ▆
  1. └─nightowl::Coxph$new(...) at test-coxph.R:95:3
  2.   └─nightowl (local) initialize(...)
  3.     └─self$fit() at 42-resolve-masking/R/coxph.R:17:7
  4.       └─purrr::map(...) at 42-resolve-masking/R/coxph.R:225:7
  5.         └─purrr:::map_("list", .x, .f, ..., .progress = .progress)
  6.           ├─purrr:::with_indexed_errors(...)
  7.           │ └─base::withCallingHandlers(...)
  8.           ├─purrr:::call_with_cleanup(...)
  9.           └─purrr (local) .f(.x[[i]], ...)
 10.             ├─purrr:::capture_error(.f(...), otherwise, quiet)
 11.             │ └─base::tryCatch(...)
 12.             │   └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 13.             │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 14.             │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 15.             └─nightowl (local) .f(...)
 16.               ├─base::do.call(...) at 42-resolve-masking/R/coxph.R:226:9
 17.               └─survival (local) `<fn>`(...)
 18.                 └─survival::coxph.fit(...)

Warning ('test-coxph.R:95:3'): coxph works
Ran out of iterations and did not converge
Backtrace:
     ▆
  1. └─nightowl::Coxph$new(...) at test-coxph.R:95:3
  2.   └─nightowl (local) initialize(...)
  3.     └─self$fit() at 42-resolve-masking/R/coxph.R:17:7
  4.       └─purrr::map(...) at 42-resolve-masking/R/coxph.R:225:7
  5.         └─purrr:::map_("list", .x, .f, ..., .progress = .progress)
  6.           ├─purrr:::with_indexed_errors(...)
  7.           │ └─base::withCallingHandlers(...)
  8.           ├─purrr:::call_with_cleanup(...)
  9.           └─purrr (local) .f(.x[[i]], ...)
 10.             ├─purrr:::capture_error(.f(...), otherwise, quiet)
 11.             │ └─base::tryCatch(...)
 12.             │   └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 13.             │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 14.             │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 15.             └─nightowl (local) .f(...)
 16.               ├─base::do.call(...) at 42-resolve-masking/R/coxph.R:226:9
 17.               └─survival (local) `<fn>`(...)
 18.                 └─survival::coxph.fit(...)

Warning ('test-coxph.R:95:3'): coxph works
Ran out of iterations and did not converge
Backtrace:
     ▆
  1. └─nightowl::Coxph$new(...) at test-coxph.R:95:3
  2.   └─nightowl (local) initialize(...)
  3.     └─self$fit() at 42-resolve-masking/R/coxph.R:17:7
  4.       └─purrr::map(...) at 42-resolve-masking/R/coxph.R:225:7
  5.         └─purrr:::map_("list", .x, .f, ..., .progress = .progress)
  6.           ├─purrr:::with_indexed_errors(...)
  7.           │ └─base::withCallingHandlers(...)
  8.           ├─purrr:::call_with_cleanup(...)
  9.           └─purrr (local) .f(.x[[i]], ...)
 10.             ├─purrr:::capture_error(.f(...), otherwise, quiet)
 11.             │ └─base::tryCatch(...)
 12.             │   └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 13.             │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 14.             │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 15.             └─nightowl (local) .f(...)
 16.               ├─base::do.call(...) at 42-resolve-masking/R/coxph.R:226:9
 17.               └─survival (local) `<fn>`(...)
 18.                 └─survival::coxph.fit(...)

Warning ('test-coxph.R:95:3'): coxph works
Ran out of iterations and did not converge
Backtrace:
     ▆
  1. └─nightowl::Coxph$new(...) at test-coxph.R:95:3
  2.   └─nightowl (local) initialize(...)
  3.     └─self$fit() at 42-resolve-masking/R/coxph.R:17:7
  4.       └─purrr::map(...) at 42-resolve-masking/R/coxph.R:225:7
  5.         └─purrr:::map_("list", .x, .f, ..., .progress = .progress)
  6.           ├─purrr:::with_indexed_errors(...)
  7.           │ └─base::withCallingHandlers(...)
  8.           ├─purrr:::call_with_cleanup(...)
  9.           └─purrr (local) .f(.x[[i]], ...)
 10.             ├─purrr:::capture_error(.f(...), otherwise, quiet)
 11.             │ └─base::tryCatch(...)
 12.             │   └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 13.             │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 14.             │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 15.             └─nightowl (local) .f(...)
 16.               ├─base::do.call(...) at 42-resolve-masking/R/coxph.R:226:9
 17.               └─survival (local) `<fn>`(...)
 18.                 └─survival::coxph.fit(...)

Warning ('test-coxph.R:95:3'): coxph works
Loglik converged before variable  3 ; coefficient may be infinite. 
Backtrace:
     ▆
  1. └─nightowl::Coxph$new(...) at test-coxph.R:95:3
  2.   └─nightowl (local) initialize(...)
  3.     └─self$fit() at 42-resolve-masking/R/coxph.R:17:7
  4.       └─purrr::map(...) at 42-resolve-masking/R/coxph.R:225:7
  5.         └─purrr:::map_("list", .x, .f, ..., .progress = .progress)
  6.           ├─purrr:::with_indexed_errors(...)
  7.           │ └─base::withCallingHandlers(...)
  8.           ├─purrr:::call_with_cleanup(...)
  9.           └─purrr (local) .f(.x[[i]], ...)
 10.             ├─purrr:::capture_error(.f(...), otherwise, quiet)
 11.             │ └─base::tryCatch(...)
 12.             │   └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 13.             │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 14.             │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 15.             └─nightowl (local) .f(...)
 16.               ├─base::do.call(...) at 42-resolve-masking/R/coxph.R:226:9
 17.               └─survival (local) `<fn>`(...)
 18.                 └─survival::coxph.fit(...)

Warning ('test-coxph.R:95:3'): coxph works
Loglik converged before variable  1,4,5 ; coefficient may be infinite. 
Backtrace:
     ▆
  1. └─nightowl::Coxph$new(...) at test-coxph.R:95:3
  2.   └─nightowl (local) initialize(...)
  3.     └─self$fit() at 42-resolve-masking/R/coxph.R:17:7
  4.       └─purrr::map(...) at 42-resolve-masking/R/coxph.R:225:7
  5.         └─purrr:::map_("list", .x, .f, ..., .progress = .progress)
  6.           ├─purrr:::with_indexed_errors(...)
  7.           │ └─base::withCallingHandlers(...)
  8.           ├─purrr:::call_with_cleanup(...)
  9.           └─purrr (local) .f(.x[[i]], ...)
 10.             ├─purrr:::capture_error(.f(...), otherwise, quiet)
 11.             │ └─base::tryCatch(...)
 12.             │   └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 13.             │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 14.             │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 15.             └─nightowl (local) .f(...)
 16.               ├─base::do.call(...) at 42-resolve-masking/R/coxph.R:226:9
 17.               └─survival (local) `<fn>`(...)
 18.                 └─survival::coxph.fit(...)

Warning ('test-coxph.R:95:3'): coxph works
Ran out of iterations and did not converge
Backtrace:
     ▆
  1. └─nightowl::Coxph$new(...) at test-coxph.R:95:3
  2.   └─nightowl (local) initialize(...)
  3.     └─self$fit() at 42-resolve-masking/R/coxph.R:17:7
  4.       └─purrr::map(...) at 42-resolve-masking/R/coxph.R:225:7
  5.         └─purrr:::map_("list", .x, .f, ..., .progress = .progress)
  6.           ├─purrr:::with_indexed_errors(...)
  7.           │ └─base::withCallingHandlers(...)
  8.           ├─purrr:::call_with_cleanup(...)
  9.           └─purrr (local) .f(.x[[i]], ...)
 10.             ├─purrr:::capture_error(.f(...), otherwise, quiet)
 11.             │ └─base::tryCatch(...)
 12.             │   └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 13.             │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 14.             │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 15.             └─nightowl (local) .f(...)
 16.               ├─base::do.call(...) at 42-resolve-masking/R/coxph.R:226:9
 17.               └─survival (local) `<fn>`(...)
 18.                 └─survival::coxph.fit(...)

Warning ('test-coxph.R:118:3'): coxph works
Returning more (or less) than 1 row per `summarise()` group was deprecated in
dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`
  always returns an ungrouped data frame and adjust accordingly.
Backtrace:
     ▆
  1. ├─tmp$output() at test-coxph.R:118:3
  2. │ ├─... %>% htmltools::browsable() at 42-resolve-masking/R/coxph.R:814:7
  3. │ └─self$html(drop = drop, keep_only_treatment = keep_only_treatment)
  4. │   ├─shiny::HTML(self$kable(drop = drop, keep_only_treatment = keep_only_treatment)) at 42-resolve-masking/R/coxph.R:809:7
  5. │   └─self$kable(drop = drop, keep_only_treatment = keep_only_treatment)
  6. │     └─self$raw(drop = drop, keep_only_treatment = keep_only_treatment) at 42-resolve-masking/R/coxph.R:796:7
  7. │       ├─... %>% dplyr::distinct() at 42-resolve-masking/R/coxph.R:450:7
  8. │       ├─dplyr::inner_join(self$N(), dplyr::bind_rows(self$results()))
  9. │       └─self$N()
 10. │         ├─... %>% dplyr::bind_rows() at 42-resolve-masking/R/coxph.R:299:7
 11. │         └─purrr::imap(...)
 12. │           └─purrr::map2(.x, vec_index(.x), .f, ...)
 13. │             └─purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
 14. │               ├─purrr:::with_indexed_errors(...)
 15. │               │ └─base::withCallingHandlers(...)
 16. │               ├─purrr:::call_with_cleanup(...)
 17. │               └─nightowl (local) .f(.x[[i]], .y[[i]], ...)
 18. │                 └─... %>% dplyr::select(-event) at 42-resolve-masking/R/coxph.R:349:9
 19. ├─htmltools::browsable(.)
 20. ├─shiny::div(...)
 21. │ └─rlang::dots_list(...)
 22. ├─dplyr::distinct(.)
 23. ├─dplyr::bind_rows(.)
 24. │ └─rlang::list2(...)
 25. ├─dplyr::select(., -event)
 26. ├─dplyr::filter(., event == "1")
 27. ├─dplyr::summarise(., N = sum(n, na.rm = T), event = !!rlang::sym(variables$event))
 28. └─dplyr:::summarise.grouped_df(., N = sum(n, na.rm = T), event = !!rlang::sym(variables$event))
 29.   └─dplyr:::summarise_deprecate_variable_size()

Warning ('test-coxph.R:118:3'): coxph works
Returning more (or less) than 1 row per `summarise()` group was deprecated in
dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`
  always returns an ungrouped data frame and adjust accordingly.
Backtrace:
     ▆
  1. ├─tmp$output() at test-coxph.R:118:3
  2. │ ├─... %>% htmltools::browsable() at 42-resolve-masking/R/coxph.R:814:7
  3. │ └─self$html(drop = drop, keep_only_treatment = keep_only_treatment)
  4. │   ├─shiny::HTML(self$kable(drop = drop, keep_only_treatment = keep_only_treatment)) at 42-resolve-masking/R/coxph.R:809:7
  5. │   └─self$kable(drop = drop, keep_only_treatment = keep_only_treatment)
  6. │     └─self$raw(drop = drop, keep_only_treatment = keep_only_treatment) at 42-resolve-masking/R/coxph.R:796:7
  7. │       ├─... %>% dplyr::distinct() at 42-resolve-masking/R/coxph.R:450:7
  8. │       ├─dplyr::inner_join(self$N(), dplyr::bind_rows(self$results()))
  9. │       └─self$N()
 10. │         ├─... %>% dplyr::bind_rows() at 42-resolve-masking/R/coxph.R:299:7
 11. │         └─purrr::imap(...)
 12. │           └─purrr::map2(.x, vec_index(.x), .f, ...)
 13. │             └─purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
 14. │               ├─purrr:::with_indexed_errors(...)
 15. │               │ └─base::withCallingHandlers(...)
 16. │               ├─purrr:::call_with_cleanup(...)
 17. │               └─nightowl (local) .f(.x[[i]], .y[[i]], ...)
 18. │                 └─... %>% dplyr::select(-event) at 42-resolve-masking/R/coxph.R:349:9
 19. ├─htmltools::browsable(.)
 20. ├─shiny::div(...)
 21. │ └─rlang::dots_list(...)
 22. ├─dplyr::distinct(.)
 23. ├─dplyr::bind_rows(.)
 24. │ └─rlang::list2(...)
 25. ├─dplyr::select(., -event)
 26. ├─dplyr::filter(., event == "1")
 27. ├─dplyr::summarise(., N = sum(n, na.rm = T), event = !!rlang::sym(variables$event))
 28. └─dplyr:::summarise.grouped_df(., N = sum(n, na.rm = T), event = !!rlang::sym(variables$event))
 29.   └─dplyr:::summarise_deprecate_variable_size()

Warning ('test-coxph.R:118:3'): coxph works
Returning more (or less) than 1 row per `summarise()` group was deprecated in
dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`
  always returns an ungrouped data frame and adjust accordingly.
Backtrace:
     ▆
  1. ├─tmp$output() at test-coxph.R:118:3
  2. │ ├─... %>% htmltools::browsable() at 42-resolve-masking/R/coxph.R:814:7
  3. │ └─self$html(drop = drop, keep_only_treatment = keep_only_treatment)
  4. │   ├─shiny::HTML(self$kable(drop = drop, keep_only_treatment = keep_only_treatment)) at 42-resolve-masking/R/coxph.R:809:7
  5. │   └─self$kable(drop = drop, keep_only_treatment = keep_only_treatment)
  6. │     └─self$raw(drop = drop, keep_only_treatment = keep_only_treatment) at 42-resolve-masking/R/coxph.R:796:7
  7. │       ├─... %>% dplyr::distinct() at 42-resolve-masking/R/coxph.R:450:7
  8. │       ├─dplyr::inner_join(self$N(), dplyr::bind_rows(self$results()))
  9. │       └─self$N()
 10. │         ├─... %>% dplyr::bind_rows() at 42-resolve-masking/R/coxph.R:299:7
 11. │         └─purrr::imap(...)
 12. │           └─purrr::map2(.x, vec_index(.x), .f, ...)
 13. │             └─purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
 14. │               ├─purrr:::with_indexed_errors(...)
 15. │               │ └─base::withCallingHandlers(...)
 16. │               ├─purrr:::call_with_cleanup(...)
 17. │               └─nightowl (local) .f(.x[[i]], .y[[i]], ...)
 18. │                 └─... %>% dplyr::select(-event) at 42-resolve-masking/R/coxph.R:349:9
 19. ├─htmltools::browsable(.)
 20. ├─shiny::div(...)
 21. │ └─rlang::dots_list(...)
 22. ├─dplyr::distinct(.)
 23. ├─dplyr::bind_rows(.)
 24. │ └─rlang::list2(...)
 25. ├─dplyr::select(., -event)
 26. ├─dplyr::filter(., event == "1")
 27. ├─dplyr::summarise(., N = sum(n, na.rm = T), event = !!rlang::sym(variables$event))
 28. └─dplyr:::summarise.grouped_df(., N = sum(n, na.rm = T), event = !!rlang::sym(variables$event))
 29.   └─dplyr:::summarise_deprecate_variable_size()

Warning ('test-coxph.R:118:3'): coxph works
Returning more (or less) than 1 row per `summarise()` group was deprecated in
dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`
  always returns an ungrouped data frame and adjust accordingly.
Backtrace:
     ▆
  1. ├─tmp$output() at test-coxph.R:118:3
  2. │ ├─... %>% htmltools::browsable() at 42-resolve-masking/R/coxph.R:814:7
  3. │ └─self$html(drop = drop, keep_only_treatment = keep_only_treatment)
  4. │   ├─shiny::HTML(self$kable(drop = drop, keep_only_treatment = keep_only_treatment)) at 42-resolve-masking/R/coxph.R:809:7
  5. │   └─self$kable(drop = drop, keep_only_treatment = keep_only_treatment)
  6. │     └─self$raw(drop = drop, keep_only_treatment = keep_only_treatment) at 42-resolve-masking/R/coxph.R:796:7
  7. │       ├─... %>% dplyr::distinct() at 42-resolve-masking/R/coxph.R:450:7
  8. │       ├─dplyr::inner_join(self$N(), dplyr::bind_rows(self$results()))
  9. │       └─self$N()
 10. │         ├─... %>% dplyr::bind_rows() at 42-resolve-masking/R/coxph.R:299:7
 11. │         └─purrr::imap(...)
 12. │           └─purrr::map2(.x, vec_index(.x), .f, ...)
 13. │             └─purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
 14. │               ├─purrr:::with_indexed_errors(...)
 15. │               │ └─base::withCallingHandlers(...)
 16. │               ├─purrr:::call_with_cleanup(...)
 17. │               └─nightowl (local) .f(.x[[i]], .y[[i]], ...)
 18. │                 └─... %>% dplyr::select(-event) at 42-resolve-masking/R/coxph.R:349:9
 19. ├─htmltools::browsable(.)
 20. ├─shiny::div(...)
 21. │ └─rlang::dots_list(...)
 22. ├─dplyr::distinct(.)
 23. ├─dplyr::bind_rows(.)
 24. │ └─rlang::list2(...)
 25. ├─dplyr::select(., -event)
 26. ├─dplyr::filter(., event == "1")
 27. ├─dplyr::summarise(., N = sum(n, na.rm = T), event = !!rlang::sym(variables$event))
 28. └─dplyr:::summarise.grouped_df(., N = sum(n, na.rm = T), event = !!rlang::sym(variables$event))
 29.   └─dplyr:::summarise_deprecate_variable_size()

Warning ('test-coxph.R:118:3'): coxph works
Returning more (or less) than 1 row per `summarise()` group was deprecated in
dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`
  always returns an ungrouped data frame and adjust accordingly.
Backtrace:
     ▆
  1. ├─tmp$output() at test-coxph.R:118:3
  2. │ ├─... %>% htmltools::browsable() at 42-resolve-masking/R/coxph.R:814:7
  3. │ └─self$html(drop = drop, keep_only_treatment = keep_only_treatment)
  4. │   ├─shiny::HTML(self$kable(drop = drop, keep_only_treatment = keep_only_treatment)) at 42-resolve-masking/R/coxph.R:809:7
  5. │   └─self$kable(drop = drop, keep_only_treatment = keep_only_treatment)
  6. │     └─self$raw(drop = drop, keep_only_treatment = keep_only_treatment) at 42-resolve-masking/R/coxph.R:796:7
  7. │       ├─... %>% dplyr::distinct() at 42-resolve-masking/R/coxph.R:450:7
  8. │       ├─dplyr::inner_join(self$N(), dplyr::bind_rows(self$results()))
  9. │       └─self$N()
 10. │         ├─... %>% dplyr::bind_rows() at 42-resolve-masking/R/coxph.R:299:7
 11. │         └─purrr::imap(...)
 12. │           └─purrr::map2(.x, vec_index(.x), .f, ...)
 13. │             └─purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
 14. │               ├─purrr:::with_indexed_errors(...)
 15. │               │ └─base::withCallingHandlers(...)
 16. │               ├─purrr:::call_with_cleanup(...)
 17. │               └─nightowl (local) .f(.x[[i]], .y[[i]], ...)
 18. │                 └─... %>% dplyr::select(-event) at 42-resolve-masking/R/coxph.R:349:9
 19. ├─htmltools::browsable(.)
 20. ├─shiny::div(...)
 21. │ └─rlang::dots_list(...)
 22. ├─dplyr::distinct(.)
 23. ├─dplyr::bind_rows(.)
 24. │ └─rlang::list2(...)
 25. ├─dplyr::select(., -event)
 26. ├─dplyr::filter(., event == "1")
 27. ├─dplyr::summarise(., N = sum(n, na.rm = T), event = !!rlang::sym(variables$event))
 28. └─dplyr:::summarise.grouped_df(., N = sum(n, na.rm = T), event = !!rlang::sym(variables$event))
 29.   └─dplyr:::summarise_deprecate_variable_size()

Warning ('test-coxph.R:118:3'): coxph works
Returning more (or less) than 1 row per `summarise()` group was deprecated in
dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`
  always returns an ungrouped data frame and adjust accordingly.
Backtrace:
     ▆
  1. ├─tmp$output() at test-coxph.R:118:3
  2. │ ├─... %>% htmltools::browsable() at 42-resolve-masking/R/coxph.R:814:7
  3. │ └─self$html(drop = drop, keep_only_treatment = keep_only_treatment)
  4. │   ├─shiny::HTML(self$kable(drop = drop, keep_only_treatment = keep_only_treatment)) at 42-resolve-masking/R/coxph.R:809:7
  5. │   └─self$kable(drop = drop, keep_only_treatment = keep_only_treatment)
  6. │     └─self$raw(drop = drop, keep_only_treatment = keep_only_treatment) at 42-resolve-masking/R/coxph.R:796:7
  7. │       ├─... %>% dplyr::distinct() at 42-resolve-masking/R/coxph.R:450:7
  8. │       ├─dplyr::inner_join(self$N(), dplyr::bind_rows(self$results()))
  9. │       └─self$N()
 10. │         ├─... %>% dplyr::bind_rows() at 42-resolve-masking/R/coxph.R:299:7
 11. │         └─purrr::imap(...)
 12. │           └─purrr::map2(.x, vec_index(.x), .f, ...)
 13. │             └─purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
 14. │               ├─purrr:::with_indexed_errors(...)
 15. │               │ └─base::withCallingHandlers(...)
 16. │               ├─purrr:::call_with_cleanup(...)
 17. │               └─nightowl (local) .f(.x[[i]], .y[[i]], ...)
 18. │                 └─... %>% dplyr::select(-event) at 42-resolve-masking/R/coxph.R:349:9
 19. ├─htmltools::browsable(.)
 20. ├─shiny::div(...)
 21. │ └─rlang::dots_list(...)
 22. ├─dplyr::distinct(.)
 23. ├─dplyr::bind_rows(.)
 24. │ └─rlang::list2(...)
 25. ├─dplyr::select(., -event)
 26. ├─dplyr::filter(., event == "1")
 27. ├─dplyr::summarise(., N = sum(n, na.rm = T), event = !!rlang::sym(variables$event))
 28. └─dplyr:::summarise.grouped_df(., N = sum(n, na.rm = T), event = !!rlang::sym(variables$event))
 29.   └─dplyr:::summarise_deprecate_variable_size()

Warning ('test-coxph.R:118:3'): coxph works
Returning more (or less) than 1 row per `summarise()` group was deprecated in
dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`
  always returns an ungrouped data frame and adjust accordingly.
Backtrace:
     ▆
  1. ├─tmp$output() at test-coxph.R:118:3
  2. │ ├─... %>% htmltools::browsable() at 42-resolve-masking/R/coxph.R:814:7
  3. │ └─self$html(drop = drop, keep_only_treatment = keep_only_treatment)
  4. │   ├─shiny::HTML(self$kable(drop = drop, keep_only_treatment = keep_only_treatment)) at 42-resolve-masking/R/coxph.R:809:7
  5. │   └─self$kable(drop = drop, keep_only_treatment = keep_only_treatment)
  6. │     └─self$raw(drop = drop, keep_only_treatment = keep_only_treatment) at 42-resolve-masking/R/coxph.R:796:7
  7. │       ├─... %>% dplyr::distinct() at 42-resolve-masking/R/coxph.R:450:7
  8. │       ├─dplyr::inner_join(self$N(), dplyr::bind_rows(self$results()))
  9. │       └─self$N()
 10. │         ├─... %>% dplyr::bind_rows() at 42-resolve-masking/R/coxph.R:299:7
 11. │         └─purrr::imap(...)
 12. │           └─purrr::map2(.x, vec_index(.x), .f, ...)
 13. │             └─purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
 14. │               ├─purrr:::with_indexed_errors(...)
 15. │               │ └─base::withCallingHandlers(...)
 16. │               ├─purrr:::call_with_cleanup(...)
 17. │               └─nightowl (local) .f(.x[[i]], .y[[i]], ...)
 18. │                 └─... %>% dplyr::select(-event) at 42-resolve-masking/R/coxph.R:349:9
 19. ├─htmltools::browsable(.)
 20. ├─shiny::div(...)
 21. │ └─rlang::dots_list(...)
 22. ├─dplyr::distinct(.)
 23. ├─dplyr::bind_rows(.)
 24. │ └─rlang::list2(...)
 25. ├─dplyr::select(., -event)
 26. ├─dplyr::filter(., event == "1")
 27. ├─dplyr::summarise(., N = sum(n, na.rm = T), event = !!rlang::sym(variables$event))
 28. └─dplyr:::summarise.grouped_df(., N = sum(n, na.rm = T), event = !!rlang::sym(variables$event))
 29.   └─dplyr:::summarise_deprecate_variable_size()

Warning ('test-coxph.R:118:3'): coxph works
Returning more (or less) than 1 row per `summarise()` group was deprecated in
dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`
  always returns an ungrouped data frame and adjust accordingly.
Backtrace:
     ▆
  1. ├─tmp$output() at test-coxph.R:118:3
  2. │ ├─... %>% htmltools::browsable() at 42-resolve-masking/R/coxph.R:814:7
  3. │ └─self$html(drop = drop, keep_only_treatment = keep_only_treatment)
  4. │   ├─shiny::HTML(self$kable(drop = drop, keep_only_treatment = keep_only_treatment)) at 42-resolve-masking/R/coxph.R:809:7
  5. │   └─self$kable(drop = drop, keep_only_treatment = keep_only_treatment)
  6. │     └─self$raw(drop = drop, keep_only_treatment = keep_only_treatment) at 42-resolve-masking/R/coxph.R:796:7
  7. │       ├─... %>% dplyr::distinct() at 42-resolve-masking/R/coxph.R:450:7
  8. │       ├─dplyr::inner_join(self$N(), dplyr::bind_rows(self$results()))
  9. │       └─self$N()
 10. │         ├─... %>% dplyr::bind_rows() at 42-resolve-masking/R/coxph.R:299:7
 11. │         └─purrr::imap(...)
 12. │           └─purrr::map2(.x, vec_index(.x), .f, ...)
 13. │             └─purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
 14. │               ├─purrr:::with_indexed_errors(...)
 15. │               │ └─base::withCallingHandlers(...)
 16. │               ├─purrr:::call_with_cleanup(...)
 17. │               └─nightowl (local) .f(.x[[i]], .y[[i]], ...)
 18. │                 └─... %>% dplyr::select(-event) at 42-resolve-masking/R/coxph.R:349:9
 19. ├─htmltools::browsable(.)
 20. ├─shiny::div(...)
 21. │ └─rlang::dots_list(...)
 22. ├─dplyr::distinct(.)
 23. ├─dplyr::bind_rows(.)
 24. │ └─rlang::list2(...)
 25. ├─dplyr::select(., -event)
 26. ├─dplyr::filter(., event == "1")
 27. ├─dplyr::summarise(., N = sum(n, na.rm = T), event = !!rlang::sym(variables$event))
 28. └─dplyr:::summarise.grouped_df(., N = sum(n, na.rm = T), event = !!rlang::sym(variables$event))
 29.   └─dplyr:::summarise_deprecate_variable_size()

Warning ('test-coxph.R:118:3'): coxph works
Returning more (or less) than 1 row per `summarise()` group was deprecated in
dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`
  always returns an ungrouped data frame and adjust accordingly.
Backtrace:
     ▆
  1. ├─tmp$output() at test-coxph.R:118:3
  2. │ ├─... %>% htmltools::browsable() at 42-resolve-masking/R/coxph.R:814:7
  3. │ └─self$html(drop = drop, keep_only_treatment = keep_only_treatment)
  4. │   ├─shiny::HTML(self$kable(drop = drop, keep_only_treatment = keep_only_treatment)) at 42-resolve-masking/R/coxph.R:809:7
  5. │   └─self$kable(drop = drop, keep_only_treatment = keep_only_treatment)
  6. │     └─self$raw(drop = drop, keep_only_treatment = keep_only_treatment) at 42-resolve-masking/R/coxph.R:796:7
  7. │       ├─... %>% dplyr::distinct() at 42-resolve-masking/R/coxph.R:450:7
  8. │       ├─dplyr::inner_join(self$N(), dplyr::bind_rows(self$results()))
  9. │       └─self$N()
 10. │         ├─... %>% dplyr::bind_rows() at 42-resolve-masking/R/coxph.R:299:7
 11. │         └─purrr::imap(...)
 12. │           └─purrr::map2(.x, vec_index(.x), .f, ...)
 13. │             └─purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
 14. │               ├─purrr:::with_indexed_errors(...)
 15. │               │ └─base::withCallingHandlers(...)
 16. │               ├─purrr:::call_with_cleanup(...)
 17. │               └─nightowl (local) .f(.x[[i]], .y[[i]], ...)
 18. │                 └─... %>% dplyr::select(-event) at 42-resolve-masking/R/coxph.R:349:9
 19. ├─htmltools::browsable(.)
 20. ├─shiny::div(...)
 21. │ └─rlang::dots_list(...)
 22. ├─dplyr::distinct(.)
 23. ├─dplyr::bind_rows(.)
 24. │ └─rlang::list2(...)
 25. ├─dplyr::select(., -event)
 26. ├─dplyr::filter(., event == "1")
 27. ├─dplyr::summarise(., N = sum(n, na.rm = T), event = !!rlang::sym(variables$event))
 28. └─dplyr:::summarise.grouped_df(., N = sum(n, na.rm = T), event = !!rlang::sym(variables$event))
 29.   └─dplyr:::summarise_deprecate_variable_size()

Warning ('test-coxph.R:118:3'): coxph works
Returning more (or less) than 1 row per `summarise()` group was deprecated in
dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`
  always returns an ungrouped data frame and adjust accordingly.
Backtrace:
     ▆
  1. ├─tmp$output() at test-coxph.R:118:3
  2. │ ├─... %>% htmltools::browsable() at 42-resolve-masking/R/coxph.R:814:7
  3. │ └─self$html(drop = drop, keep_only_treatment = keep_only_treatment)
  4. │   ├─shiny::HTML(self$kable(drop = drop, keep_only_treatment = keep_only_treatment)) at 42-resolve-masking/R/coxph.R:809:7
  5. │   └─self$kable(drop = drop, keep_only_treatment = keep_only_treatment)
  6. │     └─self$raw(drop = drop, keep_only_treatment = keep_only_treatment) at 42-resolve-masking/R/coxph.R:796:7
  7. │       ├─... %>% dplyr::distinct() at 42-resolve-masking/R/coxph.R:450:7
  8. │       ├─dplyr::inner_join(self$N(), dplyr::bind_rows(self$results()))
  9. │       └─self$N()
 10. │         ├─... %>% dplyr::bind_rows() at 42-resolve-masking/R/coxph.R:299:7
 11. │         └─purrr::imap(...)
 12. │           └─purrr::map2(.x, vec_index(.x), .f, ...)
 13. │             └─purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
 14. │               ├─purrr:::with_indexed_errors(...)
 15. │               │ └─base::withCallingHandlers(...)
 16. │               ├─purrr:::call_with_cleanup(...)
 17. │               └─nightowl (local) .f(.x[[i]], .y[[i]], ...)
 18. │                 └─... %>% dplyr::select(-event) at 42-resolve-masking/R/coxph.R:349:9
 19. ├─htmltools::browsable(.)
 20. ├─shiny::div(...)
 21. │ └─rlang::dots_list(...)
 22. ├─dplyr::distinct(.)
 23. ├─dplyr::bind_rows(.)
 24. │ └─rlang::list2(...)
 25. ├─dplyr::select(., -event)
 26. ├─dplyr::filter(., event == "1")
 27. ├─dplyr::summarise(., N = sum(n, na.rm = T), event = !!rlang::sym(variables$event))
 28. └─dplyr:::summarise.grouped_df(., N = sum(n, na.rm = T), event = !!rlang::sym(variables$event))
 29.   └─dplyr:::summarise_deprecate_variable_size()

Warning ('test-coxph.R:118:3'): coxph works
There were 8 warnings in `mutate()`.
The first warning was:
ℹ In argument: ` <div style= 'font-size: smaller;display:flex;
  flex-direction:column;align-items:center;'> <div>log(HR)</div> <div>←
  Comparison better | Reference better →</div> </div> =
  .Primitive("as.character")(` <div\n style= 'font-size: smaller;display:flex;
  flex-direction:column;align-items:center;'>\n <div>log(HR)</div>\n <div>←
  Comparison better | Reference better →</div>\n </div>`)`.
Caused by warning:
! Removed 1 row containing missing values or values outside the scale range
(`geom_point()`).
ℹ Run `dplyr::last_dplyr_warnings()` to see the 7 remaining warnings.
Backtrace:
     ▆
  1. ├─tmp$output() at test-coxph.R:118:3
  2. │ ├─... %>% htmltools::browsable() at 42-resolve-masking/R/coxph.R:814:7
  3. │ └─self$html(drop = drop, keep_only_treatment = keep_only_treatment)
  4. │   ├─shiny::HTML(self$kable(drop = drop, keep_only_treatment = keep_only_treatment)) at 42-resolve-masking/R/coxph.R:809:7
  5. │   └─self$kable(drop = drop, keep_only_treatment = keep_only_treatment)
  6. │     ├─base::do.call(...) at 42-resolve-masking/R/coxph.R:804:7
  7. │     └─nightowl (local) `<fn>`(...)
  8. │       └─dplyr::mutate_if(.tbl, nightowl::is_NightowlPlots, as.character) at 42-resolve-masking/R/tables.R:57:3
  9. │         ├─dplyr::mutate(.tbl, !!!funs)
 10. │         └─dplyr:::mutate.data.frame(.tbl, !!!funs)
 11. │           └─dplyr:::mutate_cols(.data, dplyr_quosures(...), by)
 12. │             └─dplyr:::signal_warnings(warnings_state, error_call)
 13. ├─htmltools::browsable(.)
 14. └─shiny::div(...)
 15.   └─rlang::dots_list(...)

Error ('test-coxph.R:130:3'): coxph works
<purrr_error_indexed/rlang_error/error/condition>
Error in `map2(.x, vec_index(.x), .f, ...)`: ℹ In index: 1.
ℹ With name: Overall.
Caused by error in `dplyr::mutate()`:
ℹ In argument: `reference = unlist(purrr::map(as.character(term),
  ~self$get_reference(.x)))`.
Caused by error:
! `reference` must be size 5 or 1, not 3.
────────────────────────────────────────────────────────────────────────────────

⠏ |          0 | data                                                           
✔ |      1   0 | data

⠏ |          0 | donut_plot                                                     
⠙ |   2      0 | donut_plot                                                     
⠴ |   6      0 | donut_plot                                                     
⠋ |   11      0 | donut_plot                                                    
⠹ |   13      0 | donut_plot                                                    
⠴ |   16      0 | donut_plot                                                    
⠏ |   20      0 | donut_plot                                                    
⠹ | 1 22      0 | donut_plot                                                    
✖ | 1 22      0 | donut_plot [1.1s]
────────────────────────────────────────────────────────────────────────────────
Warning ('test-donut_plot.R:2:3'): donut_plot works
`fct_explicit_na()` was deprecated in forcats 1.0.0.
ℹ Please use `fct_na_value_to_level()` instead.
Backtrace:
    ▆
 1. ├─... %>% ... at test-donut_plot.R:2:3
 2. ├─nightowl::render_donut_plot(., header = levels(palmerpenguins::penguins$island))
 3. ├─nightowl::make_donut_plot_categorical(...) at 42-resolve-masking/R/donut_plot.R:229:3
 4. │ └─factor(data[[column]]) %>% forcats::fct_explicit_na() at 42-resolve-masking/R/donut_plot.R:21:3
 5. └─forcats::fct_explicit_na(.)

Warning ('test-donut_plot.R:12:3'): donut_plot works
Removed 1 row containing non-finite outside the scale range
(`stat_ydensity()`).
Backtrace:
     ▆
  1. ├─... %>% ... at test-donut_plot.R:12:3
  2. ├─nightowl::render_donut_plot(., header = levels(palmerpenguins::penguins$island))
  3. ├─nightowl::make_donut_plot_numeric(...) at 42-resolve-masking/R/donut_plot.R:229:3
  4. │ └─... %>% ... at 42-resolve-masking/R/donut_plot.R:124:3
  5. └─purrr::imap(...)
  6.   └─purrr::map2(.x, vec_index(.x), .f, ...)
  7.     └─purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
  8.       ├─purrr:::with_indexed_errors(...)
  9.       │ └─base::withCallingHandlers(...)
 10.       ├─purrr:::call_with_cleanup(...)
 11.       └─nightowl (local) .f(.x[[i]], .y[[i]], ...)
 12.         ├─shiny::div(...) at 42-resolve-masking/R/donut_plot.R:159:7
 13.         │ └─rlang::dots_list(...)
 14.         └─nightowl::render_svg(.p, height = 6, scaling = 6, add_download_button = FALSE)
 15.           ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
 16.           │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.           │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.           │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.           ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
 20.           └─ggplot2:::print.ggplot(g)
 21.             ├─ggplot2::ggplot_build(x)
 22.             └─ggplot2:::ggplot_build.ggplot(x)
 23.               └─ggplot2:::by_layer(...)
 24.                 ├─rlang::try_fetch(...)
 25.                 │ ├─base::tryCatch(...)
 26.                 │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 27.                 │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 28.                 │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 29.                 │ └─base::withCallingHandlers(...)
 30.                 └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 31.                   └─l$compute_statistic(d, layout)
 32.                     └─ggplot2 (local) compute_statistic(..., self = self)
 33.                       └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 34.                         └─ggplot2 (local) compute_layer(..., self = self)
 35.                           └─ggplot2::remove_missing(...)
 36.                             └─cli::cli_warn(msg)

Warning ('test-donut_plot.R:12:3'): donut_plot works
Removed 1 row containing non-finite outside the scale range (`stat_boxplot()`).
Backtrace:
     ▆
  1. ├─... %>% ... at test-donut_plot.R:12:3
  2. ├─nightowl::render_donut_plot(., header = levels(palmerpenguins::penguins$island))
  3. ├─nightowl::make_donut_plot_numeric(...) at 42-resolve-masking/R/donut_plot.R:229:3
  4. │ └─... %>% ... at 42-resolve-masking/R/donut_plot.R:124:3
  5. └─purrr::imap(...)
  6.   └─purrr::map2(.x, vec_index(.x), .f, ...)
  7.     └─purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
  8.       ├─purrr:::with_indexed_errors(...)
  9.       │ └─base::withCallingHandlers(...)
 10.       ├─purrr:::call_with_cleanup(...)
 11.       └─nightowl (local) .f(.x[[i]], .y[[i]], ...)
 12.         ├─shiny::div(...) at 42-resolve-masking/R/donut_plot.R:159:7
 13.         │ └─rlang::dots_list(...)
 14.         └─nightowl::render_svg(.p, height = 6, scaling = 6, add_download_button = FALSE)
 15.           ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
 16.           │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.           │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.           │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.           ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
 20.           └─ggplot2:::print.ggplot(g)
 21.             ├─ggplot2::ggplot_build(x)
 22.             └─ggplot2:::ggplot_build.ggplot(x)
 23.               └─ggplot2:::by_layer(...)
 24.                 ├─rlang::try_fetch(...)
 25.                 │ ├─base::tryCatch(...)
 26.                 │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 27.                 │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 28.                 │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 29.                 │ └─base::withCallingHandlers(...)
 30.                 └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 31.                   └─l$compute_statistic(d, layout)
 32.                     └─ggplot2 (local) compute_statistic(..., self = self)
 33.                       └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 34.                         └─ggplot2 (local) compute_layer(..., self = self)
 35.                           └─ggplot2::remove_missing(...)
 36.                             └─cli::cli_warn(msg)

Warning ('test-donut_plot.R:12:3'): donut_plot works
Removed 103 rows containing missing values or values outside the scale range
(`geom_violin()`).
Backtrace:
     ▆
  1. ├─... %>% ... at test-donut_plot.R:12:3
  2. ├─nightowl::render_donut_plot(., header = levels(palmerpenguins::penguins$island))
  3. ├─nightowl::make_donut_plot_numeric(...) at 42-resolve-masking/R/donut_plot.R:229:3
  4. │ └─... %>% ... at 42-resolve-masking/R/donut_plot.R:124:3
  5. └─purrr::imap(...)
  6.   └─purrr::map2(.x, vec_index(.x), .f, ...)
  7.     └─purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
  8.       ├─purrr:::with_indexed_errors(...)
  9.       │ └─base::withCallingHandlers(...)
 10.       ├─purrr:::call_with_cleanup(...)
 11.       └─nightowl (local) .f(.x[[i]], .y[[i]], ...)
 12.         ├─shiny::div(...) at 42-resolve-masking/R/donut_plot.R:159:7
 13.         │ └─rlang::dots_list(...)
 14.         └─nightowl::render_svg(.p, height = 6, scaling = 6, add_download_button = FALSE)
 15.           ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
 16.           │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.           │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.           │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.           ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
 20.           └─ggplot2:::print.ggplot(g)
 21.             ├─ggplot2::ggplot_gtable(data)
 22.             └─ggplot2:::ggplot_gtable.ggplot_built(data)
 23.               └─ggplot2:::by_layer(...)
 24.                 ├─rlang::try_fetch(...)
 25.                 │ ├─base::tryCatch(...)
 26.                 │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 27.                 │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 28.                 │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 29.                 │ └─base::withCallingHandlers(...)
 30.                 └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 31.                   └─l$draw_geom(d, layout)
 32.                     └─ggplot2 (local) draw_geom(..., self = self)
 33.                       └─self$geom$handle_na(data, self$computed_geom_params)
 34.                         └─ggplot2 (local) handle_na(..., self = self)
 35.                           └─ggplot2::remove_missing(...)
 36.                             └─cli::cli_warn(msg)

Warning ('test-donut_plot.R:12:3'): donut_plot works
Removed 144 rows containing missing values or values outside the scale range
(`geom_violin()`).
Backtrace:
     ▆
  1. ├─... %>% ... at test-donut_plot.R:12:3
  2. ├─nightowl::render_donut_plot(., header = levels(palmerpenguins::penguins$island))
  3. ├─nightowl::make_donut_plot_numeric(...) at 42-resolve-masking/R/donut_plot.R:229:3
  4. │ └─... %>% ... at 42-resolve-masking/R/donut_plot.R:124:3
  5. └─purrr::imap(...)
  6.   └─purrr::map2(.x, vec_index(.x), .f, ...)
  7.     └─purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
  8.       ├─purrr:::with_indexed_errors(...)
  9.       │ └─base::withCallingHandlers(...)
 10.       ├─purrr:::call_with_cleanup(...)
 11.       └─nightowl (local) .f(.x[[i]], .y[[i]], ...)
 12.         ├─shiny::div(...) at 42-resolve-masking/R/donut_plot.R:159:7
 13.         │ └─rlang::dots_list(...)
 14.         └─nightowl::render_svg(.p, height = 6, scaling = 6, add_download_button = FALSE)
 15.           ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
 16.           │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.           │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.           │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.           ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
 20.           └─ggplot2:::print.ggplot(g)
 21.             ├─ggplot2::ggplot_gtable(data)
 22.             └─ggplot2:::ggplot_gtable.ggplot_built(data)
 23.               └─ggplot2:::by_layer(...)
 24.                 ├─rlang::try_fetch(...)
 25.                 │ ├─base::tryCatch(...)
 26.                 │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 27.                 │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 28.                 │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 29.                 │ └─base::withCallingHandlers(...)
 30.                 └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 31.                   └─l$draw_geom(d, layout)
 32.                     └─ggplot2 (local) draw_geom(..., self = self)
 33.                       └─self$geom$handle_na(data, self$computed_geom_params)
 34.                         └─ggplot2 (local) handle_na(..., self = self)
 35.                           └─ggplot2::remove_missing(...)
 36.                             └─cli::cli_warn(msg)

Warning ('test-donut_plot.R:12:3'): donut_plot works
Removed 1 row containing non-finite outside the scale range
(`stat_ydensity()`).
Backtrace:
     ▆
  1. ├─... %>% ... at test-donut_plot.R:12:3
  2. ├─nightowl::render_donut_plot(., header = levels(palmerpenguins::penguins$island))
  3. ├─nightowl::make_donut_plot_numeric(...) at 42-resolve-masking/R/donut_plot.R:229:3
  4. │ └─... %>% ... at 42-resolve-masking/R/donut_plot.R:124:3
  5. └─purrr::imap(...)
  6.   └─purrr::map2(.x, vec_index(.x), .f, ...)
  7.     └─purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
  8.       ├─purrr:::with_indexed_errors(...)
  9.       │ └─base::withCallingHandlers(...)
 10.       ├─purrr:::call_with_cleanup(...)
 11.       └─nightowl (local) .f(.x[[i]], .y[[i]], ...)
 12.         ├─shiny::div(...) at 42-resolve-masking/R/donut_plot.R:159:7
 13.         │ └─rlang::dots_list(...)
 14.         └─nightowl::render_svg(.p, height = 6, scaling = 6, add_download_button = FALSE)
 15.           ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
 16.           │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.           │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.           │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.           ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
 20.           └─ggplot2:::print.ggplot(g)
 21.             ├─ggplot2::ggplot_build(x)
 22.             └─ggplot2:::ggplot_build.ggplot(x)
 23.               └─ggplot2:::by_layer(...)
 24.                 ├─rlang::try_fetch(...)
 25.                 │ ├─base::tryCatch(...)
 26.                 │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 27.                 │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 28.                 │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 29.                 │ └─base::withCallingHandlers(...)
 30.                 └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 31.                   └─l$compute_statistic(d, layout)
 32.                     └─ggplot2 (local) compute_statistic(..., self = self)
 33.                       └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 34.                         └─ggplot2 (local) compute_layer(..., self = self)
 35.                           └─ggplot2::remove_missing(...)
 36.                             └─cli::cli_warn(msg)

Warning ('test-donut_plot.R:12:3'): donut_plot works
Removed 1 row containing non-finite outside the scale range (`stat_boxplot()`).
Backtrace:
     ▆
  1. ├─... %>% ... at test-donut_plot.R:12:3
  2. ├─nightowl::render_donut_plot(., header = levels(palmerpenguins::penguins$island))
  3. ├─nightowl::make_donut_plot_numeric(...) at 42-resolve-masking/R/donut_plot.R:229:3
  4. │ └─... %>% ... at 42-resolve-masking/R/donut_plot.R:124:3
  5. └─purrr::imap(...)
  6.   └─purrr::map2(.x, vec_index(.x), .f, ...)
  7.     └─purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
  8.       ├─purrr:::with_indexed_errors(...)
  9.       │ └─base::withCallingHandlers(...)
 10.       ├─purrr:::call_with_cleanup(...)
 11.       └─nightowl (local) .f(.x[[i]], .y[[i]], ...)
 12.         ├─shiny::div(...) at 42-resolve-masking/R/donut_plot.R:159:7
 13.         │ └─rlang::dots_list(...)
 14.         └─nightowl::render_svg(.p, height = 6, scaling = 6, add_download_button = FALSE)
 15.           ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
 16.           │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.           │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.           │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.           ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
 20.           └─ggplot2:::print.ggplot(g)
 21.             ├─ggplot2::ggplot_build(x)
 22.             └─ggplot2:::ggplot_build.ggplot(x)
 23.               └─ggplot2:::by_layer(...)
 24.                 ├─rlang::try_fetch(...)
 25.                 │ ├─base::tryCatch(...)
 26.                 │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 27.                 │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 28.                 │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 29.                 │ └─base::withCallingHandlers(...)
 30.                 └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 31.                   └─l$compute_statistic(d, layout)
 32.                     └─ggplot2 (local) compute_statistic(..., self = self)
 33.                       └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 34.                         └─ggplot2 (local) compute_layer(..., self = self)
 35.                           └─ggplot2::remove_missing(...)
 36.                             └─cli::cli_warn(msg)

Warning ('test-donut_plot.R:12:3'): donut_plot works
Removed 60 rows containing missing values or values outside the scale range
(`geom_violin()`).
Backtrace:
     ▆
  1. ├─... %>% ... at test-donut_plot.R:12:3
  2. ├─nightowl::render_donut_plot(., header = levels(palmerpenguins::penguins$island))
  3. ├─nightowl::make_donut_plot_numeric(...) at 42-resolve-masking/R/donut_plot.R:229:3
  4. │ └─... %>% ... at 42-resolve-masking/R/donut_plot.R:124:3
  5. └─purrr::imap(...)
  6.   └─purrr::map2(.x, vec_index(.x), .f, ...)
  7.     └─purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
  8.       ├─purrr:::with_indexed_errors(...)
  9.       │ └─base::withCallingHandlers(...)
 10.       ├─purrr:::call_with_cleanup(...)
 11.       └─nightowl (local) .f(.x[[i]], .y[[i]], ...)
 12.         ├─shiny::div(...) at 42-resolve-masking/R/donut_plot.R:159:7
 13.         │ └─rlang::dots_list(...)
 14.         └─nightowl::render_svg(.p, height = 6, scaling = 6, add_download_button = FALSE)
 15.           ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
 16.           │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.           │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.           │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.           ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
 20.           └─ggplot2:::print.ggplot(g)
 21.             ├─ggplot2::ggplot_gtable(data)
 22.             └─ggplot2:::ggplot_gtable.ggplot_built(data)
 23.               └─ggplot2:::by_layer(...)
 24.                 ├─rlang::try_fetch(...)
 25.                 │ ├─base::tryCatch(...)
 26.                 │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 27.                 │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 28.                 │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 29.                 │ └─base::withCallingHandlers(...)
 30.                 └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 31.                   └─l$draw_geom(d, layout)
 32.                     └─ggplot2 (local) draw_geom(..., self = self)
 33.                       └─self$geom$handle_na(data, self$computed_geom_params)
 34.                         └─ggplot2 (local) handle_na(..., self = self)
 35.                           └─ggplot2::remove_missing(...)
 36.                             └─cli::cli_warn(msg)

Warning ('test-donut_plot.R:20:3'): donut_plot works
Removed 1 row containing non-finite outside the scale range
(`stat_ydensity()`).
Backtrace:
     ▆
  1. ├─nightowl::donut_plot(...) at test-donut_plot.R:20:3
  2. │ └─purrr::pmap(...) at 42-resolve-masking/R/donut_plot.R:214:3
  3. │   └─purrr:::pmap_("list", .l, .f, ..., .progress = .progress)
  4. │     ├─purrr:::with_indexed_errors(...)
  5. │     │ └─base::withCallingHandlers(...)
  6. │     ├─purrr:::call_with_cleanup(...)
  7. │     └─nightowl (local) .f(...)
  8. │       ├─base::do.call(...) at 42-resolve-masking/R/donut_plot.R:216:7
  9. │       └─nightowl (local) `<fn>`(...)
 10. │         └─... %>% ... at 42-resolve-masking/R/donut_plot.R:124:3
 11. └─purrr::imap(...)
 12.   └─purrr::map2(.x, vec_index(.x), .f, ...)
 13.     └─purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
 14.       ├─purrr:::with_indexed_errors(...)
 15.       │ └─base::withCallingHandlers(...)
 16.       ├─purrr:::call_with_cleanup(...)
 17.       └─nightowl (local) .f(.x[[i]], .y[[i]], ...)
 18.         ├─shiny::div(...) at 42-resolve-masking/R/donut_plot.R:159:7
 19.         │ └─rlang::dots_list(...)
 20.         └─nightowl::render_svg(.p, height = 6, scaling = 6, add_download_button = FALSE)
 21.           ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
 22.           │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 23.           │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 24.           │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 25.           ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
 26.           └─ggplot2:::print.ggplot(g)
 27.             ├─ggplot2::ggplot_build(x)
 28.             └─ggplot2:::ggplot_build.ggplot(x)
 29.               └─ggplot2:::by_layer(...)
 30.                 ├─rlang::try_fetch(...)
 31.                 │ ├─base::tryCatch(...)
 32.                 │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 33.                 │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 34.                 │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 35.                 │ └─base::withCallingHandlers(...)
 36.                 └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 37.                   └─l$compute_statistic(d, layout)
 38.                     └─ggplot2 (local) compute_statistic(..., self = self)
 39.                       └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 40.                         └─ggplot2 (local) compute_layer(..., self = self)
 41.                           └─ggplot2::remove_missing(...)
 42.                             └─cli::cli_warn(msg)

Warning ('test-donut_plot.R:20:3'): donut_plot works
Removed 1 row containing non-finite outside the scale range (`stat_boxplot()`).
Backtrace:
     ▆
  1. ├─nightowl::donut_plot(...) at test-donut_plot.R:20:3
  2. │ └─purrr::pmap(...) at 42-resolve-masking/R/donut_plot.R:214:3
  3. │   └─purrr:::pmap_("list", .l, .f, ..., .progress = .progress)
  4. │     ├─purrr:::with_indexed_errors(...)
  5. │     │ └─base::withCallingHandlers(...)
  6. │     ├─purrr:::call_with_cleanup(...)
  7. │     └─nightowl (local) .f(...)
  8. │       ├─base::do.call(...) at 42-resolve-masking/R/donut_plot.R:216:7
  9. │       └─nightowl (local) `<fn>`(...)
 10. │         └─... %>% ... at 42-resolve-masking/R/donut_plot.R:124:3
 11. └─purrr::imap(...)
 12.   └─purrr::map2(.x, vec_index(.x), .f, ...)
 13.     └─purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
 14.       ├─purrr:::with_indexed_errors(...)
 15.       │ └─base::withCallingHandlers(...)
 16.       ├─purrr:::call_with_cleanup(...)
 17.       └─nightowl (local) .f(.x[[i]], .y[[i]], ...)
 18.         ├─shiny::div(...) at 42-resolve-masking/R/donut_plot.R:159:7
 19.         │ └─rlang::dots_list(...)
 20.         └─nightowl::render_svg(.p, height = 6, scaling = 6, add_download_button = FALSE)
 21.           ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
 22.           │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 23.           │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 24.           │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 25.           ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
 26.           └─ggplot2:::print.ggplot(g)
 27.             ├─ggplot2::ggplot_build(x)
 28.             └─ggplot2:::ggplot_build.ggplot(x)
 29.               └─ggplot2:::by_layer(...)
 30.                 ├─rlang::try_fetch(...)
 31.                 │ ├─base::tryCatch(...)
 32.                 │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 33.                 │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 34.                 │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 35.                 │ └─base::withCallingHandlers(...)
 36.                 └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 37.                   └─l$compute_statistic(d, layout)
 38.                     └─ggplot2 (local) compute_statistic(..., self = self)
 39.                       └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 40.                         └─ggplot2 (local) compute_layer(..., self = self)
 41.                           └─ggplot2::remove_missing(...)
 42.                             └─cli::cli_warn(msg)

Warning ('test-donut_plot.R:20:3'): donut_plot works
Removed 103 rows containing missing values or values outside the scale range
(`geom_violin()`).
Backtrace:
     ▆
  1. ├─nightowl::donut_plot(...) at test-donut_plot.R:20:3
  2. │ └─purrr::pmap(...) at 42-resolve-masking/R/donut_plot.R:214:3
  3. │   └─purrr:::pmap_("list", .l, .f, ..., .progress = .progress)
  4. │     ├─purrr:::with_indexed_errors(...)
  5. │     │ └─base::withCallingHandlers(...)
  6. │     ├─purrr:::call_with_cleanup(...)
  7. │     └─nightowl (local) .f(...)
  8. │       ├─base::do.call(...) at 42-resolve-masking/R/donut_plot.R:216:7
  9. │       └─nightowl (local) `<fn>`(...)
 10. │         └─... %>% ... at 42-resolve-masking/R/donut_plot.R:124:3
 11. └─purrr::imap(...)
 12.   └─purrr::map2(.x, vec_index(.x), .f, ...)
 13.     └─purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
 14.       ├─purrr:::with_indexed_errors(...)
 15.       │ └─base::withCallingHandlers(...)
 16.       ├─purrr:::call_with_cleanup(...)
 17.       └─nightowl (local) .f(.x[[i]], .y[[i]], ...)
 18.         ├─shiny::div(...) at 42-resolve-masking/R/donut_plot.R:159:7
 19.         │ └─rlang::dots_list(...)
 20.         └─nightowl::render_svg(.p, height = 6, scaling = 6, add_download_button = FALSE)
 21.           ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
 22.           │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 23.           │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 24.           │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 25.           ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
 26.           └─ggplot2:::print.ggplot(g)
 27.             ├─ggplot2::ggplot_gtable(data)
 28.             └─ggplot2:::ggplot_gtable.ggplot_built(data)
 29.               └─ggplot2:::by_layer(...)
 30.                 ├─rlang::try_fetch(...)
 31.                 │ ├─base::tryCatch(...)
 32.                 │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 33.                 │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 34.                 │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 35.                 │ └─base::withCallingHandlers(...)
 36.                 └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 37.                   └─l$draw_geom(d, layout)
 38.                     └─ggplot2 (local) draw_geom(..., self = self)
 39.                       └─self$geom$handle_na(data, self$computed_geom_params)
 40.                         └─ggplot2 (local) handle_na(..., self = self)
 41.                           └─ggplot2::remove_missing(...)
 42.                             └─cli::cli_warn(msg)

Warning ('test-donut_plot.R:20:3'): donut_plot works
Removed 144 rows containing missing values or values outside the scale range
(`geom_violin()`).
Backtrace:
     ▆
  1. ├─nightowl::donut_plot(...) at test-donut_plot.R:20:3
  2. │ └─purrr::pmap(...) at 42-resolve-masking/R/donut_plot.R:214:3
  3. │   └─purrr:::pmap_("list", .l, .f, ..., .progress = .progress)
  4. │     ├─purrr:::with_indexed_errors(...)
  5. │     │ └─base::withCallingHandlers(...)
  6. │     ├─purrr:::call_with_cleanup(...)
  7. │     └─nightowl (local) .f(...)
  8. │       ├─base::do.call(...) at 42-resolve-masking/R/donut_plot.R:216:7
  9. │       └─nightowl (local) `<fn>`(...)
 10. │         └─... %>% ... at 42-resolve-masking/R/donut_plot.R:124:3
 11. └─purrr::imap(...)
 12.   └─purrr::map2(.x, vec_index(.x), .f, ...)
 13.     └─purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
 14.       ├─purrr:::with_indexed_errors(...)
 15.       │ └─base::withCallingHandlers(...)
 16.       ├─purrr:::call_with_cleanup(...)
 17.       └─nightowl (local) .f(.x[[i]], .y[[i]], ...)
 18.         ├─shiny::div(...) at 42-resolve-masking/R/donut_plot.R:159:7
 19.         │ └─rlang::dots_list(...)
 20.         └─nightowl::render_svg(.p, height = 6, scaling = 6, add_download_button = FALSE)
 21.           ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
 22.           │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 23.           │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 24.           │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 25.           ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
 26.           └─ggplot2:::print.ggplot(g)
 27.             ├─ggplot2::ggplot_gtable(data)
 28.             └─ggplot2:::ggplot_gtable.ggplot_built(data)
 29.               └─ggplot2:::by_layer(...)
 30.                 ├─rlang::try_fetch(...)
 31.                 │ ├─base::tryCatch(...)
 32.                 │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 33.                 │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 34.                 │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 35.                 │ └─base::withCallingHandlers(...)
 36.                 └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 37.                   └─l$draw_geom(d, layout)
 38.                     └─ggplot2 (local) draw_geom(..., self = self)
 39.                       └─self$geom$handle_na(data, self$computed_geom_params)
 40.                         └─ggplot2 (local) handle_na(..., self = self)
 41.                           └─ggplot2::remove_missing(...)
 42.                             └─cli::cli_warn(msg)

Warning ('test-donut_plot.R:20:3'): donut_plot works
Removed 1 row containing non-finite outside the scale range
(`stat_ydensity()`).
Backtrace:
     ▆
  1. ├─nightowl::donut_plot(...) at test-donut_plot.R:20:3
  2. │ └─purrr::pmap(...) at 42-resolve-masking/R/donut_plot.R:214:3
  3. │   └─purrr:::pmap_("list", .l, .f, ..., .progress = .progress)
  4. │     ├─purrr:::with_indexed_errors(...)
  5. │     │ └─base::withCallingHandlers(...)
  6. │     ├─purrr:::call_with_cleanup(...)
  7. │     └─nightowl (local) .f(...)
  8. │       ├─base::do.call(...) at 42-resolve-masking/R/donut_plot.R:216:7
  9. │       └─nightowl (local) `<fn>`(...)
 10. │         └─... %>% ... at 42-resolve-masking/R/donut_plot.R:124:3
 11. └─purrr::imap(...)
 12.   └─purrr::map2(.x, vec_index(.x), .f, ...)
 13.     └─purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
 14.       ├─purrr:::with_indexed_errors(...)
 15.       │ └─base::withCallingHandlers(...)
 16.       ├─purrr:::call_with_cleanup(...)
 17.       └─nightowl (local) .f(.x[[i]], .y[[i]], ...)
 18.         ├─shiny::div(...) at 42-resolve-masking/R/donut_plot.R:159:7
 19.         │ └─rlang::dots_list(...)
 20.         └─nightowl::render_svg(.p, height = 6, scaling = 6, add_download_button = FALSE)
 21.           ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
 22.           │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 23.           │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 24.           │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 25.           ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
 26.           └─ggplot2:::print.ggplot(g)
 27.             ├─ggplot2::ggplot_build(x)
 28.             └─ggplot2:::ggplot_build.ggplot(x)
 29.               └─ggplot2:::by_layer(...)
 30.                 ├─rlang::try_fetch(...)
 31.                 │ ├─base::tryCatch(...)
 32.                 │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 33.                 │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 34.                 │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 35.                 │ └─base::withCallingHandlers(...)
 36.                 └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 37.                   └─l$compute_statistic(d, layout)
 38.                     └─ggplot2 (local) compute_statistic(..., self = self)
 39.                       └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 40.                         └─ggplot2 (local) compute_layer(..., self = self)
 41.                           └─ggplot2::remove_missing(...)
 42.                             └─cli::cli_warn(msg)

Warning ('test-donut_plot.R:20:3'): donut_plot works
Removed 1 row containing non-finite outside the scale range (`stat_boxplot()`).
Backtrace:
     ▆
  1. ├─nightowl::donut_plot(...) at test-donut_plot.R:20:3
  2. │ └─purrr::pmap(...) at 42-resolve-masking/R/donut_plot.R:214:3
  3. │   └─purrr:::pmap_("list", .l, .f, ..., .progress = .progress)
  4. │     ├─purrr:::with_indexed_errors(...)
  5. │     │ └─base::withCallingHandlers(...)
  6. │     ├─purrr:::call_with_cleanup(...)
  7. │     └─nightowl (local) .f(...)
  8. │       ├─base::do.call(...) at 42-resolve-masking/R/donut_plot.R:216:7
  9. │       └─nightowl (local) `<fn>`(...)
 10. │         └─... %>% ... at 42-resolve-masking/R/donut_plot.R:124:3
 11. └─purrr::imap(...)
 12.   └─purrr::map2(.x, vec_index(.x), .f, ...)
 13.     └─purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
 14.       ├─purrr:::with_indexed_errors(...)
 15.       │ └─base::withCallingHandlers(...)
 16.       ├─purrr:::call_with_cleanup(...)
 17.       └─nightowl (local) .f(.x[[i]], .y[[i]], ...)
 18.         ├─shiny::div(...) at 42-resolve-masking/R/donut_plot.R:159:7
 19.         │ └─rlang::dots_list(...)
 20.         └─nightowl::render_svg(.p, height = 6, scaling = 6, add_download_button = FALSE)
 21.           ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
 22.           │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 23.           │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 24.           │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 25.           ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
 26.           └─ggplot2:::print.ggplot(g)
 27.             ├─ggplot2::ggplot_build(x)
 28.             └─ggplot2:::ggplot_build.ggplot(x)
 29.               └─ggplot2:::by_layer(...)
 30.                 ├─rlang::try_fetch(...)
 31.                 │ ├─base::tryCatch(...)
 32.                 │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 33.                 │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 34.                 │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 35.                 │ └─base::withCallingHandlers(...)
 36.                 └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 37.                   └─l$compute_statistic(d, layout)
 38.                     └─ggplot2 (local) compute_statistic(..., self = self)
 39.                       └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 40.                         └─ggplot2 (local) compute_layer(..., self = self)
 41.                           └─ggplot2::remove_missing(...)
 42.                             └─cli::cli_warn(msg)

Warning ('test-donut_plot.R:20:3'): donut_plot works
Removed 60 rows containing missing values or values outside the scale range
(`geom_violin()`).
Backtrace:
     ▆
  1. ├─nightowl::donut_plot(...) at test-donut_plot.R:20:3
  2. │ └─purrr::pmap(...) at 42-resolve-masking/R/donut_plot.R:214:3
  3. │   └─purrr:::pmap_("list", .l, .f, ..., .progress = .progress)
  4. │     ├─purrr:::with_indexed_errors(...)
  5. │     │ └─base::withCallingHandlers(...)
  6. │     ├─purrr:::call_with_cleanup(...)
  7. │     └─nightowl (local) .f(...)
  8. │       ├─base::do.call(...) at 42-resolve-masking/R/donut_plot.R:216:7
  9. │       └─nightowl (local) `<fn>`(...)
 10. │         └─... %>% ... at 42-resolve-masking/R/donut_plot.R:124:3
 11. └─purrr::imap(...)
 12.   └─purrr::map2(.x, vec_index(.x), .f, ...)
 13.     └─purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
 14.       ├─purrr:::with_indexed_errors(...)
 15.       │ └─base::withCallingHandlers(...)
 16.       ├─purrr:::call_with_cleanup(...)
 17.       └─nightowl (local) .f(.x[[i]], .y[[i]], ...)
 18.         ├─shiny::div(...) at 42-resolve-masking/R/donut_plot.R:159:7
 19.         │ └─rlang::dots_list(...)
 20.         └─nightowl::render_svg(.p, height = 6, scaling = 6, add_download_button = FALSE)
 21.           ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
 22.           │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 23.           │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 24.           │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 25.           ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
 26.           └─ggplot2:::print.ggplot(g)
 27.             ├─ggplot2::ggplot_gtable(data)
 28.             └─ggplot2:::ggplot_gtable.ggplot_built(data)
 29.               └─ggplot2:::by_layer(...)
 30.                 ├─rlang::try_fetch(...)
 31.                 │ ├─base::tryCatch(...)
 32.                 │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 33.                 │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 34.                 │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 35.                 │ └─base::withCallingHandlers(...)
 36.                 └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 37.                   └─l$draw_geom(d, layout)
 38.                     └─ggplot2 (local) draw_geom(..., self = self)
 39.                       └─self$geom$handle_na(data, self$computed_geom_params)
 40.                         └─ggplot2 (local) handle_na(..., self = self)
 41.                           └─ggplot2::remove_missing(...)
 42.                             └─cli::cli_warn(msg)

Warning ('test-donut_plot.R:26:3'): donut_plot works
Removed 1 row containing non-finite outside the scale range
(`stat_ydensity()`).
Backtrace:
     ▆
  1. ├─nightowl::donut_plot(...) at test-donut_plot.R:26:3
  2. │ └─purrr::pmap(...) at 42-resolve-masking/R/donut_plot.R:214:3
  3. │   └─purrr:::pmap_("list", .l, .f, ..., .progress = .progress)
  4. │     ├─purrr:::with_indexed_errors(...)
  5. │     │ └─base::withCallingHandlers(...)
  6. │     ├─purrr:::call_with_cleanup(...)
  7. │     └─nightowl (local) .f(...)
  8. │       ├─base::do.call(...) at 42-resolve-masking/R/donut_plot.R:216:7
  9. │       └─nightowl (local) `<fn>`(...)
 10. │         └─... %>% ... at 42-resolve-masking/R/donut_plot.R:124:3
 11. └─purrr::imap(...)
 12.   └─purrr::map2(.x, vec_index(.x), .f, ...)
 13.     └─purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
 14.       ├─purrr:::with_indexed_errors(...)
 15.       │ └─base::withCallingHandlers(...)
 16.       ├─purrr:::call_with_cleanup(...)
 17.       └─nightowl (local) .f(.x[[i]], .y[[i]], ...)
 18.         ├─shiny::div(...) at 42-resolve-masking/R/donut_plot.R:159:7
 19.         │ └─rlang::dots_list(...)
 20.         └─nightowl::render_svg(.p, height = 6, scaling = 6, add_download_button = FALSE)
 21.           ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
 22.           │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 23.           │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 24.           │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 25.           ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
 26.           └─ggplot2:::print.ggplot(g)
 27.             ├─ggplot2::ggplot_build(x)
 28.             └─ggplot2:::ggplot_build.ggplot(x)
 29.               └─ggplot2:::by_layer(...)
 30.                 ├─rlang::try_fetch(...)
 31.                 │ ├─base::tryCatch(...)
 32.                 │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 33.                 │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 34.                 │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 35.                 │ └─base::withCallingHandlers(...)
 36.                 └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 37.                   └─l$compute_statistic(d, layout)
 38.                     └─ggplot2 (local) compute_statistic(..., self = self)
 39.                       └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 40.                         └─ggplot2 (local) compute_layer(..., self = self)
 41.                           └─ggplot2::remove_missing(...)
 42.                             └─cli::cli_warn(msg)

Warning ('test-donut_plot.R:26:3'): donut_plot works
Removed 1 row containing non-finite outside the scale range (`stat_boxplot()`).
Backtrace:
     ▆
  1. ├─nightowl::donut_plot(...) at test-donut_plot.R:26:3
  2. │ └─purrr::pmap(...) at 42-resolve-masking/R/donut_plot.R:214:3
  3. │   └─purrr:::pmap_("list", .l, .f, ..., .progress = .progress)
  4. │     ├─purrr:::with_indexed_errors(...)
  5. │     │ └─base::withCallingHandlers(...)
  6. │     ├─purrr:::call_with_cleanup(...)
  7. │     └─nightowl (local) .f(...)
  8. │       ├─base::do.call(...) at 42-resolve-masking/R/donut_plot.R:216:7
  9. │       └─nightowl (local) `<fn>`(...)
 10. │         └─... %>% ... at 42-resolve-masking/R/donut_plot.R:124:3
 11. └─purrr::imap(...)
 12.   └─purrr::map2(.x, vec_index(.x), .f, ...)
 13.     └─purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
 14.       ├─purrr:::with_indexed_errors(...)
 15.       │ └─base::withCallingHandlers(...)
 16.       ├─purrr:::call_with_cleanup(...)
 17.       └─nightowl (local) .f(.x[[i]], .y[[i]], ...)
 18.         ├─shiny::div(...) at 42-resolve-masking/R/donut_plot.R:159:7
 19.         │ └─rlang::dots_list(...)
 20.         └─nightowl::render_svg(.p, height = 6, scaling = 6, add_download_button = FALSE)
 21.           ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
 22.           │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 23.           │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 24.           │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 25.           ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
 26.           └─ggplot2:::print.ggplot(g)
 27.             ├─ggplot2::ggplot_build(x)
 28.             └─ggplot2:::ggplot_build.ggplot(x)
 29.               └─ggplot2:::by_layer(...)
 30.                 ├─rlang::try_fetch(...)
 31.                 │ ├─base::tryCatch(...)
 32.                 │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 33.                 │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 34.                 │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 35.                 │ └─base::withCallingHandlers(...)
 36.                 └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 37.                   └─l$compute_statistic(d, layout)
 38.                     └─ggplot2 (local) compute_statistic(..., self = self)
 39.                       └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 40.                         └─ggplot2 (local) compute_layer(..., self = self)
 41.                           └─ggplot2::remove_missing(...)
 42.                             └─cli::cli_warn(msg)

Warning ('test-donut_plot.R:26:3'): donut_plot works
Removed 103 rows containing missing values or values outside the scale range
(`geom_violin()`).
Backtrace:
     ▆
  1. ├─nightowl::donut_plot(...) at test-donut_plot.R:26:3
  2. │ └─purrr::pmap(...) at 42-resolve-masking/R/donut_plot.R:214:3
  3. │   └─purrr:::pmap_("list", .l, .f, ..., .progress = .progress)
  4. │     ├─purrr:::with_indexed_errors(...)
  5. │     │ └─base::withCallingHandlers(...)
  6. │     ├─purrr:::call_with_cleanup(...)
  7. │     └─nightowl (local) .f(...)
  8. │       ├─base::do.call(...) at 42-resolve-masking/R/donut_plot.R:216:7
  9. │       └─nightowl (local) `<fn>`(...)
 10. │         └─... %>% ... at 42-resolve-masking/R/donut_plot.R:124:3
 11. └─purrr::imap(...)
 12.   └─purrr::map2(.x, vec_index(.x), .f, ...)
 13.     └─purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
 14.       ├─purrr:::with_indexed_errors(...)
 15.       │ └─base::withCallingHandlers(...)
 16.       ├─purrr:::call_with_cleanup(...)
 17.       └─nightowl (local) .f(.x[[i]], .y[[i]], ...)
 18.         ├─shiny::div(...) at 42-resolve-masking/R/donut_plot.R:159:7
 19.         │ └─rlang::dots_list(...)
 20.         └─nightowl::render_svg(.p, height = 6, scaling = 6, add_download_button = FALSE)
 21.           ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
 22.           │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 23.           │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 24.           │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 25.           ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
 26.           └─ggplot2:::print.ggplot(g)
 27.             ├─ggplot2::ggplot_gtable(data)
 28.             └─ggplot2:::ggplot_gtable.ggplot_built(data)
 29.               └─ggplot2:::by_layer(...)
 30.                 ├─rlang::try_fetch(...)
 31.                 │ ├─base::tryCatch(...)
 32.                 │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 33.                 │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 34.                 │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 35.                 │ └─base::withCallingHandlers(...)
 36.                 └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 37.                   └─l$draw_geom(d, layout)
 38.                     └─ggplot2 (local) draw_geom(..., self = self)
 39.                       └─self$geom$handle_na(data, self$computed_geom_params)
 40.                         └─ggplot2 (local) handle_na(..., self = self)
 41.                           └─ggplot2::remove_missing(...)
 42.                             └─cli::cli_warn(msg)

Warning ('test-donut_plot.R:26:3'): donut_plot works
Removed 144 rows containing missing values or values outside the scale range
(`geom_violin()`).
Backtrace:
     ▆
  1. ├─nightowl::donut_plot(...) at test-donut_plot.R:26:3
  2. │ └─purrr::pmap(...) at 42-resolve-masking/R/donut_plot.R:214:3
  3. │   └─purrr:::pmap_("list", .l, .f, ..., .progress = .progress)
  4. │     ├─purrr:::with_indexed_errors(...)
  5. │     │ └─base::withCallingHandlers(...)
  6. │     ├─purrr:::call_with_cleanup(...)
  7. │     └─nightowl (local) .f(...)
  8. │       ├─base::do.call(...) at 42-resolve-masking/R/donut_plot.R:216:7
  9. │       └─nightowl (local) `<fn>`(...)
 10. │         └─... %>% ... at 42-resolve-masking/R/donut_plot.R:124:3
 11. └─purrr::imap(...)
 12.   └─purrr::map2(.x, vec_index(.x), .f, ...)
 13.     └─purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
 14.       ├─purrr:::with_indexed_errors(...)
 15.       │ └─base::withCallingHandlers(...)
 16.       ├─purrr:::call_with_cleanup(...)
 17.       └─nightowl (local) .f(.x[[i]], .y[[i]], ...)
 18.         ├─shiny::div(...) at 42-resolve-masking/R/donut_plot.R:159:7
 19.         │ └─rlang::dots_list(...)
 20.         └─nightowl::render_svg(.p, height = 6, scaling = 6, add_download_button = FALSE)
 21.           ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
 22.           │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 23.           │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 24.           │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 25.           ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
 26.           └─ggplot2:::print.ggplot(g)
 27.             ├─ggplot2::ggplot_gtable(data)
 28.             └─ggplot2:::ggplot_gtable.ggplot_built(data)
 29.               └─ggplot2:::by_layer(...)
 30.                 ├─rlang::try_fetch(...)
 31.                 │ ├─base::tryCatch(...)
 32.                 │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 33.                 │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 34.                 │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 35.                 │ └─base::withCallingHandlers(...)
 36.                 └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 37.                   └─l$draw_geom(d, layout)
 38.                     └─ggplot2 (local) draw_geom(..., self = self)
 39.                       └─self$geom$handle_na(data, self$computed_geom_params)
 40.                         └─ggplot2 (local) handle_na(..., self = self)
 41.                           └─ggplot2::remove_missing(...)
 42.                             └─cli::cli_warn(msg)

Warning ('test-donut_plot.R:26:3'): donut_plot works
Removed 1 row containing non-finite outside the scale range
(`stat_ydensity()`).
Backtrace:
     ▆
  1. ├─nightowl::donut_plot(...) at test-donut_plot.R:26:3
  2. │ └─purrr::pmap(...) at 42-resolve-masking/R/donut_plot.R:214:3
  3. │   └─purrr:::pmap_("list", .l, .f, ..., .progress = .progress)
  4. │     ├─purrr:::with_indexed_errors(...)
  5. │     │ └─base::withCallingHandlers(...)
  6. │     ├─purrr:::call_with_cleanup(...)
  7. │     └─nightowl (local) .f(...)
  8. │       ├─base::do.call(...) at 42-resolve-masking/R/donut_plot.R:216:7
  9. │       └─nightowl (local) `<fn>`(...)
 10. │         └─... %>% ... at 42-resolve-masking/R/donut_plot.R:124:3
 11. └─purrr::imap(...)
 12.   └─purrr::map2(.x, vec_index(.x), .f, ...)
 13.     └─purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
 14.       ├─purrr:::with_indexed_errors(...)
 15.       │ └─base::withCallingHandlers(...)
 16.       ├─purrr:::call_with_cleanup(...)
 17.       └─nightowl (local) .f(.x[[i]], .y[[i]], ...)
 18.         ├─shiny::div(...) at 42-resolve-masking/R/donut_plot.R:159:7
 19.         │ └─rlang::dots_list(...)
 20.         └─nightowl::render_svg(.p, height = 6, scaling = 6, add_download_button = FALSE)
 21.           ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
 22.           │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 23.           │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 24.           │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 25.           ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
 26.           └─ggplot2:::print.ggplot(g)
 27.             ├─ggplot2::ggplot_build(x)
 28.             └─ggplot2:::ggplot_build.ggplot(x)
 29.               └─ggplot2:::by_layer(...)
 30.                 ├─rlang::try_fetch(...)
 31.                 │ ├─base::tryCatch(...)
 32.                 │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 33.                 │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 34.                 │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 35.                 │ └─base::withCallingHandlers(...)
 36.                 └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 37.                   └─l$compute_statistic(d, layout)
 38.                     └─ggplot2 (local) compute_statistic(..., self = self)
 39.                       └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 40.                         └─ggplot2 (local) compute_layer(..., self = self)
 41.                           └─ggplot2::remove_missing(...)
 42.                             └─cli::cli_warn(msg)

Warning ('test-donut_plot.R:26:3'): donut_plot works
Removed 1 row containing non-finite outside the scale range (`stat_boxplot()`).
Backtrace:
     ▆
  1. ├─nightowl::donut_plot(...) at test-donut_plot.R:26:3
  2. │ └─purrr::pmap(...) at 42-resolve-masking/R/donut_plot.R:214:3
  3. │   └─purrr:::pmap_("list", .l, .f, ..., .progress = .progress)
  4. │     ├─purrr:::with_indexed_errors(...)
  5. │     │ └─base::withCallingHandlers(...)
  6. │     ├─purrr:::call_with_cleanup(...)
  7. │     └─nightowl (local) .f(...)
  8. │       ├─base::do.call(...) at 42-resolve-masking/R/donut_plot.R:216:7
  9. │       └─nightowl (local) `<fn>`(...)
 10. │         └─... %>% ... at 42-resolve-masking/R/donut_plot.R:124:3
 11. └─purrr::imap(...)
 12.   └─purrr::map2(.x, vec_index(.x), .f, ...)
 13.     └─purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
 14.       ├─purrr:::with_indexed_errors(...)
 15.       │ └─base::withCallingHandlers(...)
 16.       ├─purrr:::call_with_cleanup(...)
 17.       └─nightowl (local) .f(.x[[i]], .y[[i]], ...)
 18.         ├─shiny::div(...) at 42-resolve-masking/R/donut_plot.R:159:7
 19.         │ └─rlang::dots_list(...)
 20.         └─nightowl::render_svg(.p, height = 6, scaling = 6, add_download_button = FALSE)
 21.           ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
 22.           │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 23.           │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 24.           │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 25.           ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
 26.           └─ggplot2:::print.ggplot(g)
 27.             ├─ggplot2::ggplot_build(x)
 28.             └─ggplot2:::ggplot_build.ggplot(x)
 29.               └─ggplot2:::by_layer(...)
 30.                 ├─rlang::try_fetch(...)
 31.                 │ ├─base::tryCatch(...)
 32.                 │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 33.                 │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 34.                 │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 35.                 │ └─base::withCallingHandlers(...)
 36.                 └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 37.                   └─l$compute_statistic(d, layout)
 38.                     └─ggplot2 (local) compute_statistic(..., self = self)
 39.                       └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 40.                         └─ggplot2 (local) compute_layer(..., self = self)
 41.                           └─ggplot2::remove_missing(...)
 42.                             └─cli::cli_warn(msg)

Warning ('test-donut_plot.R:26:3'): donut_plot works
Removed 60 rows containing missing values or values outside the scale range
(`geom_violin()`).
Backtrace:
     ▆
  1. ├─nightowl::donut_plot(...) at test-donut_plot.R:26:3
  2. │ └─purrr::pmap(...) at 42-resolve-masking/R/donut_plot.R:214:3
  3. │   └─purrr:::pmap_("list", .l, .f, ..., .progress = .progress)
  4. │     ├─purrr:::with_indexed_errors(...)
  5. │     │ └─base::withCallingHandlers(...)
  6. │     ├─purrr:::call_with_cleanup(...)
  7. │     └─nightowl (local) .f(...)
  8. │       ├─base::do.call(...) at 42-resolve-masking/R/donut_plot.R:216:7
  9. │       └─nightowl (local) `<fn>`(...)
 10. │         └─... %>% ... at 42-resolve-masking/R/donut_plot.R:124:3
 11. └─purrr::imap(...)
 12.   └─purrr::map2(.x, vec_index(.x), .f, ...)
 13.     └─purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
 14.       ├─purrr:::with_indexed_errors(...)
 15.       │ └─base::withCallingHandlers(...)
 16.       ├─purrr:::call_with_cleanup(...)
 17.       └─nightowl (local) .f(.x[[i]], .y[[i]], ...)
 18.         ├─shiny::div(...) at 42-resolve-masking/R/donut_plot.R:159:7
 19.         │ └─rlang::dots_list(...)
 20.         └─nightowl::render_svg(.p, height = 6, scaling = 6, add_download_button = FALSE)
 21.           ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
 22.           │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 23.           │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 24.           │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 25.           ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
 26.           └─ggplot2:::print.ggplot(g)
 27.             ├─ggplot2::ggplot_gtable(data)
 28.             └─ggplot2:::ggplot_gtable.ggplot_built(data)
 29.               └─ggplot2:::by_layer(...)
 30.                 ├─rlang::try_fetch(...)
 31.                 │ ├─base::tryCatch(...)
 32.                 │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 33.                 │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 34.                 │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 35.                 │ └─base::withCallingHandlers(...)
 36.                 └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 37.                   └─l$draw_geom(d, layout)
 38.                     └─ggplot2 (local) draw_geom(..., self = self)
 39.                       └─self$geom$handle_na(data, self$computed_geom_params)
 40.                         └─ggplot2 (local) handle_na(..., self = self)
 41.                           └─ggplot2::remove_missing(...)
 42.                             └─cli::cli_warn(msg)

Error ('test-donut_plot.R:34:3'): donut_plot works
<vctrs_error_incompatible_size/vctrs_error_incompatible/vctrs_error/rlang_error/error/condition>
Error in `purrr::pmap(params, function(data, column, label, options) {
    if (is.numeric(data[[column]])) {
        do.call(nightowl::make_donut_plot_numeric, c(list(data = data, 
            column = column, split = split, label = label), options))
    }
    else {
        do.call(nightowl::make_donut_plot_categorical, c(list(data = data, 
            column = column, split = split, label = label), options))
    }
})`: Can't recycle `.l$data` (size 3) to match `.l$label` (size 2).
Backtrace:
    ▆
 1. ├─nightowl::donut_plot(...) at test-donut_plot.R:34:3
 2. │ └─purrr::pmap(...) at 42-resolve-masking/R/donut_plot.R:214:3
 3. │   └─purrr:::pmap_("list", .l, .f, ..., .progress = .progress)
 4. │     └─vctrs::vec_size_common(!!!.l, .arg = ".l", .call = .purrr_error_call)
 5. └─vctrs::stop_incompatible_size(...)
 6.   └─vctrs:::stop_incompatible(...)
 7.     └─vctrs:::stop_vctrs(...)
 8.       └─rlang::abort(message, class = c(class, "vctrs_error"), ..., call = call)
────────────────────────────────────────────────────────────────────────────────

⠏ |          0 | forestplot                                                     
⠋ | 1        0 | forestplot                                                     
✖ | 1        0 | forestplot
────────────────────────────────────────────────────────────────────────────────
Error ('test-forestplot.R:5:3'): multiplication works
Error in `UseMethod("as_html")`: no applicable method for 'as_html' applied to an object of class "c('html', 'character')"
Backtrace:
    ▆
 1. ├─nightowl::as_html(a) %>% class() at test-forestplot.R:5:3
 2. └─nightowl::as_html(a)
────────────────────────────────────────────────────────────────────────────────

⠏ |          0 | formula                                                        
✔ |      1   0 | formula

⠏ |          0 | frequencies                                                    
✖ | 1        0 | frequencies
────────────────────────────────────────────────────────────────────────────────
Error ('test-frequencies.R:10:3'): frequencies work
Error: 'frequencies' is not an exported object from 'namespace:nightowl'
Backtrace:
    ▆
 1. ├─nightowl::frequencies(x) %>% nightowl::render_kable() at test-frequencies.R:10:3
 2. └─nightowl::render_kable(.)
 3.   └─stringr::str_detect(names(.tbl), "<div") at 42-resolve-masking/R/tables.R:51:5
 4.     └─stringr:::check_lengths(string, pattern)
 5.       └─vctrs::vec_size_common(...)
────────────────────────────────────────────────────────────────────────────────

⠏ |          0 | geom_hillow_median                                             
✖ | 1        0 | geom_hillow_median
────────────────────────────────────────────────────────────────────────────────
Error ('test-geom_hillow_median.R:5:3'): geom hillow median works
Error: 'geom_hillow_median' is not an exported object from 'namespace:nightowl'
────────────────────────────────────────────────────────────────────────────────

⠏ |          0 | geom-bootstrap-mean                                            
✖ | 1        0 | geom-bootstrap-mean
────────────────────────────────────────────────────────────────────────────────
Error ('test-geom-bootstrap-mean.R:7:3'): geom hillow median works
Error: 'geom_bootstrap_mean' is not an exported object from 'namespace:nightowl'
────────────────────────────────────────────────────────────────────────────────

⠏ |          0 | ggally                                                         
⠸ |   4      0 | ggally                                                         
⠏ |   10      0 | ggally                                                        
⠴ |   16      0 | ggally                                                        
⠙ |   22      0 | ggally                                                        
⠴ |   26      0 | ggally                                                        
⠙ |   32      0 | ggally                                                        
⠧ |   38      0 | ggally                                                        
⠸ |   44      0 | ggally                                                        
⠋ |   51      0 | ggally                                                        
⠸ |   54      0 | ggally                                                        
⠏ |   60      0 | ggally                                                        
⠴ |   66      0 | ggally                                                        
⠙ |   72      0 | ggally                                                        
⠧ |   78      0 | ggally                                                        
⠸ |   84      0 | ggally                                                        
⠏ |   90      0 | ggally                                                        
⠴ |   96      0 | ggally                                                        
⠙ |   102      0 | ggally                                                       
⠧ |   108      0 | ggally                                                       
⠹ |   113      0 | ggally                                                       
⠇ |   119      0 | ggally                                                       
⠴ |   126      0 | ggally                                                       
⠙ |   132      0 | ggally                                                       
⠧ |   138      0 | ggally                                                       
⠸ |   144      0 | ggally                                                       
⠏ |   150      0 | ggally                                                       
⠼ |   155      0 | ggally                                                       
⠋ |   161      0 | ggally                                                       
⠦ |   167      0 | ggally                                                       
⠸ |   174      0 | ggally                                                       
⠏ |   180      0 | ggally                                                       
⠴ |   186      0 | ggally                                                       
⠙ |   192      0 | ggally                                                       
⠇ |   199      0 | ggally                                                       
⠼ |   205      0 | ggally                                                       
⠋ |   211      0 | ggally                                                       
⠦ |   217      0 | ggally                                                       
⠸ |   224      0 | ggally                                                       
⠏ |   230      0 | ggally                                                       
⠴ |   236      0 | ggally                                                       
⠙ |   242      0 | ggally                                                       
⠇ |   249      0 | ggally                                                       
⠼ |   255      0 | ggally                                                       
⠋ |   261      0 | ggally                                                       
⠦ |   267      0 | ggally                                                       
⠹ |   273      0 | ggally                                                       
⠸ |   274      0 | ggally                                                       
✖ | 1 274      0 | ggally [7.2s]
────────────────────────────────────────────────────────────────────────────────
Warning ('test-ggally.R:4:3'): ggally works
`aes_()` was deprecated in ggplot2 3.0.0.
ℹ Please use tidy evaluation idioms with `aes()`
Backtrace:
    ▆
 1. ├─nightowl::ggpairs(...) at test-ggally.R:4:3
 2. │ └─... %>% nightowl:::aes() at 42-resolve-masking/R/correlation_matrix.R:157:3
 3. └─nightowl:::aes(.)
 4.   ├─rlang::exec(.fn = "f", !!!aes) at 42-resolve-masking/R/add_plots.R:346:3
 5.   └─ggplot2 (local) f(color = `<fn>`(vs), group = `<fn>`(vs), fill = `<fn>`(vs))
 6.     └─ggplot2:::deprecate_soft0("3.0.0", "aes_()", details = "Please use tidy evaluation idioms with `aes()`")

Warning ('test-ggally.R:12:3'): ggally works
Using an external vector in selections was deprecated in tidyselect 1.1.0.
ℹ Please use `all_of()` or `any_of()` instead.
  # Was:
  data %>% select(key)

  # Now:
  data %>% select(all_of(key))

See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. ├─nightowl::render_svg(.)
  3. │ └─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4. │   └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5. │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6. │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7. ├─nightowl::ggpairs(...) at 42-resolve-masking/R/svg.r:97:7
  8. │ └─nightowl::spread_data(DATA, mapping$key, mapping$value) at 42-resolve-masking/R/correlation_matrix.R:151:3
  9. │   ├─base::tryCatch(...) at 42-resolve-masking/R/utils.r:24:5
 10. │   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 11. │   └─DATA %>% dplyr::ungroup() %>% ... at 42-resolve-masking/R/utils.r:25:7
 12. ├─tidyr::pivot_wider(., names_from = key, values_from = value)
 13. └─tidyr:::pivot_wider.data.frame(., names_from = key, values_from = value)
 14.   └─tidyr::build_wider_spec(...)
 15.     └─tidyselect::eval_select(...)
 16.       └─tidyselect:::eval_select_impl(...)
 17.         ├─tidyselect:::with_subscript_errors(...)
 18.         │ └─base::withCallingHandlers(...)
 19.         └─tidyselect:::vars_select_eval(...)
 20.           └─tidyselect:::walk_data_tree(expr, data_mask, context_mask)
 21.             └─tidyselect:::eval_sym(expr, data_mask, context_mask)

Warning ('test-ggally.R:12:3'): ggally works
Using an external vector in selections was deprecated in tidyselect 1.1.0.
ℹ Please use `all_of()` or `any_of()` instead.
  # Was:
  data %>% select(value)

  # Now:
  data %>% select(all_of(value))

See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. ├─nightowl::render_svg(.)
  3. │ └─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4. │   └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5. │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6. │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7. ├─nightowl::ggpairs(...) at 42-resolve-masking/R/svg.r:97:7
  8. │ └─nightowl::spread_data(DATA, mapping$key, mapping$value) at 42-resolve-masking/R/correlation_matrix.R:151:3
  9. │   ├─base::tryCatch(...) at 42-resolve-masking/R/utils.r:24:5
 10. │   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 11. │   └─DATA %>% dplyr::ungroup() %>% ... at 42-resolve-masking/R/utils.r:25:7
 12. ├─tidyr::pivot_wider(., names_from = key, values_from = value)
 13. └─tidyr:::pivot_wider.data.frame(., names_from = key, values_from = value)
 14.   └─tidyr::build_wider_spec(...)
 15.     └─tidyselect::eval_select(...)
 16.       └─tidyselect:::eval_select_impl(...)
 17.         ├─tidyselect:::with_subscript_errors(...)
 18.         │ └─base::withCallingHandlers(...)
 19.         └─tidyselect:::vars_select_eval(...)
 20.           └─tidyselect:::walk_data_tree(expr, data_mask, context_mask)
 21.             └─tidyselect:::eval_sym(expr, data_mask, context_mask)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 2 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 2 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 4 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 4 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 2 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 2 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 4 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 4 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_density()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 2 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 2 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 4 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 4 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_density()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 2 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 2 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 4 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 4 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_density()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 2 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 2 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 4 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 4 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_density()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 2 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 2 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 4 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 4 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 1 row containing non-finite outside the scale range (`stat_density()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 2 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 2 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 4 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 4 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 2 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 2 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 2 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 2 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 2 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 2 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 2 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 2 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 2 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 2 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 2 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 2 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 2 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 2 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 2 rows containing non-finite outside the scale range
(`stat_density()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 4 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 4 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range
(`stat_density()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 4 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 4 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 3 rows containing non-finite outside the scale range
(`stat_density()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 4 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 4 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 4 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 4 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 4 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 4 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 4 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 4 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 4 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 4 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 4 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 4 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 4 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 4 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 4 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 4 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 4 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 4 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 4 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 4 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 4 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 4 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 4 rows containing non-finite outside the scale range
(`stat_density()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing non-finite outside the scale range (`sta_corr()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing non-finite outside the scale range (`stat_smooth()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing missing values or values outside the scale range
(`geom_point()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         └─ggplot2:::ggplot_gtable.ggplot_built(ggplot_build(p))
 13.           └─ggplot2:::by_layer(...)
 14.             ├─rlang::try_fetch(...)
 15.             │ ├─base::tryCatch(...)
 16.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19.             │ └─base::withCallingHandlers(...)
 20.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 21.               └─l$draw_geom(d, layout)
 22.                 └─ggplot2 (local) draw_geom(..., self = self)
 23.                   └─self$geom$handle_na(data, self$computed_geom_params)
 24.                     └─ggplot2 (local) handle_na(..., self = self)
 25.                       └─ggplot2::remove_missing(...)
 26.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:12:3'): ggally works
Removed 5 rows containing non-finite outside the scale range
(`stat_density()`).
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:12:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       └─GGally:::plot_gtable(p)
 11.         ├─ggplot2::ggplot_gtable(ggplot_build(p))
 12.         │ └─ggplot2:::attach_plot_env(data$plot$plot_env)
 13.         │   └─base::options(ggplot2_plot_env = env)
 14.         ├─ggplot2::ggplot_build(p)
 15.         └─ggplot2:::ggplot_build.ggplot(p)
 16.           └─ggplot2:::by_layer(...)
 17.             ├─rlang::try_fetch(...)
 18.             │ ├─base::tryCatch(...)
 19.             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 20.             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 21.             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 22.             │ └─base::withCallingHandlers(...)
 23.             └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 24.               └─l$compute_statistic(d, layout)
 25.                 └─ggplot2 (local) compute_statistic(..., self = self)
 26.                   └─self$stat$compute_layer(data, self$computed_stat_params, layout)
 27.                     └─ggplot2 (local) compute_layer(..., self = self)
 28.                       └─ggplot2::remove_missing(...)
 29.                         └─cli::cli_warn(msg)

Warning ('test-ggally.R:21:3'): ggally works
Using `as.character()` on a quosure is deprecated as of rlang 0.3.0. Please use
`as_label()` or `as_name()` instead.
This warning is displayed once every 8 hours.
Backtrace:
     ▆
  1. ├─... %>% nightowl::render_svg() at test-ggally.R:21:3
  2. └─nightowl::render_svg(.)
  3.   ├─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
  4.   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  5.   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  6.   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
  7.   ├─base::print(g) at 42-resolve-masking/R/svg.r:100:9
  8.   └─GGally:::print.ggmatrix(g)
  9.     └─GGally::ggmatrix_gtable(x, ...)
 10.       ├─pm[i, j]
 11.       └─GGally:::`[.ggmatrix`(pm, i, j)
 12.         └─GGally::getPlot(pm, i, j)
 13.           └─GGally (local) fn(pm$data, plotObj$mapping)
 14.             ├─rlang::inject(original_fn(!!!allParams))
 15.             └─GGally (local) original_fn(data = `<df[,13]>`, mapping = `<uneval>`)
 16.               ├─rlang::inject(original_fn(!!!allParams))
 17.               └─nightowl (local) original_fn(data = `<df[,13]>`, mapping = `<uneval>`)
 18.                 └─purrr::map(...) at 42-resolve-masking/R/correlation_matrix.R:189:3
 19.                   └─purrr:::map_("list", .x, .f, ..., .progress = .progress)
 20.                     ├─purrr:::with_indexed_errors(...)
 21.                     │ └─base::withCallingHandlers(...)
 22.                     ├─purrr:::call_with_cleanup(...)
 23.                     └─nightowl (local) .f(.x[[i]], ...)
 24.                       ├─stringr::str_replace_all(as.character(.x)[2], "`", "") at 42-resolve-masking/R/correlation_matrix.R:190:5
 25.                       │ └─stringr:::check_lengths(string, pattern, replacement)
 26.                       │   └─vctrs::vec_size_common(...)
 27.                       ├─base::as.character(.x)
 28.                       └─rlang:::as.character.quosure(.x)
 29.                         └─rlang:::deprecate_warn(...)
 30.                           └─rlang:::.rlang_lifecycle_deprecate_warn0(...)

Error ('test-ggally.R:21:3'): ggally works
<evalError/missingArgError/error/condition>
Error in `(function (data, style, ...) 
{
    mapping <- list(...)
    if (file.exists(style)) {
        style <- yaml::read_yaml(style)
    }
    else {
        style <- nightowl::load_style(style)
    }
    do.call(nightowl::plot, c(list(data = data), list(mapping = mapping), 
        style))
})(DATA = structure(list(Chick = structure(c(15L, 17L, 14L, 11L, 
18L, 12L, 20L, 8L, 5L, 7L, 13L, 16L, 4L, 19L, 3L, 2L, 9L, 1L, 
10L, 6L, 30L, 23L, 24L, 21L, 28L, 27L, 25L, 26L, 29L, 22L, 34L, 
37L, 31L, 39L, 40L, 33L, 32L, 36L, 35L, 38L, 44L, 49L, 43L, 41L, 
42L, 47L, 45L, 50L, 46L, 48L), levels = c("18", "16", "15", "13", 
"9", "20", "10", "8", "17", "19", "4", "6", "11", "3", "1", "12", 
"2", "5", "14", "7", "24", "30", "22", "23", "27", "28", "26", 
"25", "29", "21", "33", "37", "36", "31", "39", "38", "32", "40", 
"34", "35", "44", "45", "43", "41", "47", "49", "46", "50", "42", 
"48"), class = c("ordered", "factor")), `0` = c(42, 40, 43, 42, 
41, 41, 41, 42, 42, 41, 43, 41, 41, 41, 41, 41, 42, 39, 43, 41, 
40, 41, 43, 42, 40, 42, 39, 39, 39, 42, 42, 41, 39, 41, 41, 39, 
41, 41, 42, 41, 42, 42, 42, 42, 41, 40, 41, 39, 40, 41), `2` = c(51, 
49, 39, 49, 42, 49, 49, 50, 51, 44, 51, 49, 48, 49, 49, 45, 51, 
35, 48, 47, 50, 55, 52, 52, 49, 48, 46, 46, 48, 48, 53, 49, 50, 
49, 53, 48, 48, 49, 50, 55, 51, 49, 55, 51, 50, 52, 53, 50, 53, 
54), `4` = c(59, 58, 55, 56, 48, 59, 57, 61, 59, 52, 63, 56, 
53, 62, 56, 49, 61, NA, 55, 54, 62, 64, 61, 58, 62, 57, 58, 58, 
59, 59, 62, 65, 63, 63, 64, 61, 56, 61, 61, 66, 66, 63, 69, 65, 
61, 62, 66, 62, 64, 67), `6` = c(64, 72, 67, 67, 60, 74, 71, 
71, 68, 63, 84, 62, 60, 79, 64, 51, 72, NA, 62, 58, 86, 77, 73, 
74, 78, 74, 73, 73, 74, 72, 73, 82, 77, 85, 87, 76, 68, 74, 78, 
79, 85, 84, 96, 86, 78, 82, 79, 80, 85, 84), `8` = c(76, 84, 
84, 74, 79, 97, 89, 84, 85, 74, 112, 72, 65, 101, 68, 57, 83, 
NA, 65, 65, 125, 90, 90, 66, 102, 93, 87, 92, 87, 85, 85, 107, 
96, 107, 123, 98, 80, 98, 89, 101, 103, 103, 131, 103, 98, 101, 
100, 104, 108, 105), `10` = c(93, 103, 99, 87, 106, 124, 112, 
93, 96, 81, 139, 88, 67, 128, 68, 51, 89, NA, 71, 73, 163, 95, 
103, 68, 124, 114, 100, 114, 106, 98, 102, 129, 111, 134, 158, 
116, 83, 109, 109, 120, 124, 126, 157, 118, 117, 120, 123, 125, 
128, 122), `12` = c(106, 122, 115, 102, 141, 141, 146, 110, 90, 
89, 168, 119, 71, 164, 67, 54, 98, NA, 82, 77, 217, 108, 127, 
70, 146, 136, 115, 145, 134, 115, 123, 159, 137, 164, 201, 145, 
103, 128, 130, 154, 155, 160, 184, 127, 135, 144, 148, 154, 152, 
155), `14` = c(125, 138, 138, 108, 164, 148, 174, 116, 92, 96, 
177, 135, 70, 192, 68, NA, 103, NA, 88, 89, 240, 111, 135, 71, 
164, 147, 123, 156, 150, 122, 138, 179, 144, 186, 238, 166, 112, 
154, 146, 182, 153, 174, 188, 138, 141, 156, 157, 170, 166, 175
), `16` = c(149, 162, 163, 136, 197, 155, 218, 126, 93, 101, 
182, 162, 71, 227, NA, NA, 113, NA, 106, 98, 275, 131, 145, 72, 
197, 169, 144, 184, 187, 143, 170, 221, 151, 235, 287, 198, 135, 
192, 170, 215, 175, 204, 197, 145, 147, 173, 168, 222, 184, 205
), `18` = c(171, 187, 187, 154, 199, 160, 250, 134, 100, 112, 
184, 185, 81, 248, NA, NA, 123, NA, 120, 107, 307, 148, 163, 
72, 231, 205, 163, 207, 230, 151, 204, 263, 146, 294, 332, 227, 
157, 232, 214, 262, 184, 234, 198, 146, 174, 210, 185, 261, 203, 
234), `20` = c(199, 209, 198, 160, 220, 160, 288, 125, 100, 120, 
181, 195, 91, 259, NA, NA, 133, NA, 144, 115, 318, 164, 170, 
76, 259, 236, 185, 212, 279, 157, 235, 291, 156, 327, 361, 225, 
169, 280, 250, 295, 199, 269, 199, NA, 197, 231, 210, 303, 233, 
264), `21` = c(205, 215, 202, 157, 223, 157, 305, NA, 98, 124, 
175, 205, 96, 266, NA, NA, 142, NA, 157, 117, 331, 167, 175, 
74, 265, 251, 192, 233, 309, 150, 256, 305, 147, 341, 373, 220, 
178, 290, 272, 321, 204, 281, 200, NA, 196, 238, 205, 322, 237, 
264)), row.names = c(NA, -50L), class = "data.frame"), style = "Histogram-simple", 
    y = NULL, x = "0")`: argument "data" is missing, with no default
Backtrace:
    ▆
 1. ├─... %>% nightowl::render_svg() at test-ggally.R:21:3
 2. └─nightowl::render_svg(.)
 3.   └─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
 4.     └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 5.       └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 6.         └─value[[3L]](cond)
────────────────────────────────────────────────────────────────────────────────

⠏ |          0 | ggiraph                                                        
✖ | 1        0 | ggiraph
────────────────────────────────────────────────────────────────────────────────
Error ('test-ggiraph.R:2:3'): ggiraph works
<packageNotFoundError/error/condition>
Error in `loadNamespace(x)`: there is no package called ‘ggiraph’
Backtrace:
    ▆
 1. └─base::loadNamespace(x) at test-ggiraph.R:2:3
 2.   └─base::withRestarts(stop(cond), retry_loadNamespace = function() NULL)
 3.     └─base (local) withOneRestart(expr, restarts[[1L]])
 4.       └─base (local) doWithOneRestart(return(expr), restart)
────────────────────────────────────────────────────────────────────────────────

⠏ |          0 | grouped_chisq                                                  
⠋ | 1        0 | grouped_chisq                                                  
✖ | 1        0 | grouped_chisq
────────────────────────────────────────────────────────────────────────────────
Error ('test-grouped_chisq.R:10:3'): grouped chisq works
<dplyr:::mutate_error/rlang_error/error/condition>
Error in `dplyr::arrange(., p.value)`: ℹ In argument: `..1 = p.value`.
Caused by error:
! object 'p.value' not found
Backtrace:
     ▆
  1. ├─nightowl::extract_results_grouped_chisq(test) at test-grouped_chisq.R:10:3
  2. │ └─... %>% dplyr::arrange(p.value) at 42-resolve-masking/R/grouped_chisq.R:32:3
  3. ├─dplyr::arrange(., p.value)
  4. ├─dplyr:::arrange.data.frame(., p.value)
  5. │ └─dplyr:::arrange_rows(.data, dots = dots, locale = .locale)
  6. │   ├─dplyr::mutate(data, `:=`("{name}", !!dot), .keep = "none")
  7. │   └─dplyr:::mutate.data.frame(data, `:=`("{name}", !!dot), .keep = "none")
  8. │     └─dplyr:::mutate_cols(.data, dplyr_quosures(...), by)
  9. │       ├─base::withCallingHandlers(...)
 10. │       └─dplyr:::mutate_col(dots[[i]], data, mask, new_columns)
 11. │         └─mask$eval_all_mutate(quo)
 12. │           └─dplyr (local) eval()
 13. └─base::.handleSimpleError(...)
 14.   └─dplyr (local) h(simpleError(msg, call))
 15.     └─rlang::abort(message, class = error_class, parent = parent, call = error_call)
────────────────────────────────────────────────────────────────────────────────

⠏ |          0 | inline-plots                                                   
✖ | 1 3      0 | inline-plots
────────────────────────────────────────────────────────────────────────────────
Warning ('test-inline-plots.R:7:3'): inline plots work
Ignoring unknown parameters: `dodge`
Backtrace:
     ▆
  1. └─nightowl::add_inline_plot(...) at test-inline-plots.R:7:3
  2.   └─nightowl::DeclarativePlot$new(...) at 42-resolve-masking/R/inline_plots.R:197:3
  3.     └─nightowl (local) initialize(...)
  4.       └─self$set_plot() at 42-resolve-masking/R/plot.R:153:7
  5.         ├─(memoise::memoise(function() {... at 42-resolve-masking/R/plot.R:213:7
  6.         │ ├─base::withVisible(eval(mc, parent.frame()))
  7.         │ └─base::eval(mc, parent.frame())
  8.         │   └─base::eval(mc, parent.frame())
  9.         └─nightowl (local) `<fn>`()
 10.           └─purrr::reduce(...) at 42-resolve-masking/R/plot.R:218:9
 11.             └─purrr:::reduce_impl(.x, .f, ..., .init = .init, .dir = .dir)
 12.               └─nightowl (local) fn(out, elt, ...)
 13.                 ├─base::eval(parse(text = thiscall)) at 42-resolve-masking/R/plot.R:226:11
 14.                 │ └─base::eval(parse(text = thiscall))
 15.                 ├─base::do.call(nightowl::generic, .y)
 16.                 └─nightowl (local) `<fn>`(...)
 17.                   └─ggplot2 (local) .f(mapping = .aes, ...) at 42-resolve-masking/R/add_plots.R:9:3
 18.                     └─ggplot2::layer(...)
 19.                       └─cli::cli_warn(...)

Warning ('test-inline-plots.R:12:3'): inline plots work
Ignoring unknown parameters: `dodge`
Backtrace:
     ▆
  1. └─nightowl::add_inline_histogram(rnorm(1000, 0, 1)) at test-inline-plots.R:12:3
  2.   └─nightowl::add_inline_plot(...) at 42-resolve-masking/R/inline_plots.R:247:3
  3.     └─nightowl::DeclarativePlot$new(...) at 42-resolve-masking/R/inline_plots.R:197:3
  4.       └─nightowl (local) initialize(...)
  5.         └─self$set_plot() at 42-resolve-masking/R/plot.R:153:7
  6.           ├─(memoise::memoise(function() {... at 42-resolve-masking/R/plot.R:213:7
  7.           │ ├─base::withVisible(eval(mc, parent.frame()))
  8.           │ └─base::eval(mc, parent.frame())
  9.           │   └─base::eval(mc, parent.frame())
 10.           └─nightowl (local) `<fn>`()
 11.             └─purrr::reduce(...) at 42-resolve-masking/R/plot.R:218:9
 12.               └─purrr:::reduce_impl(.x, .f, ..., .init = .init, .dir = .dir)
 13.                 └─nightowl (local) fn(out, elt, ...)
 14.                   ├─base::eval(parse(text = thiscall)) at 42-resolve-masking/R/plot.R:226:11
 15.                   │ └─base::eval(parse(text = thiscall))
 16.                   ├─base::do.call(nightowl::generic, .y)
 17.                   └─nightowl (local) `<fn>`(...)
 18.                     └─ggplot2 (local) .f(mapping = .aes, ...) at 42-resolve-masking/R/add_plots.R:9:3
 19.                       └─ggplot2::layer(...)
 20.                         └─cli::cli_warn(...)

Warning ('test-inline-plots.R:14:3'): inline plots work
Ignoring unknown parameters: `dodge`
Backtrace:
     ▆
  1. ├─... %>% nightowl::make_scale() at test-inline-plots.R:14:3
  2. ├─nightowl::make_scale(.)
  3. └─nightowl::add_inline_pointrange(...) at 42-resolve-masking/R/inline_plots.R:431:3
  4.   └─nightowl::add_inline_plot(...) at 42-resolve-masking/R/inline_plots.R:264:3
  5.     └─nightowl::DeclarativePlot$new(...) at 42-resolve-masking/R/inline_plots.R:197:3
  6.       └─nightowl (local) initialize(...)
  7.         └─self$set_plot() at 42-resolve-masking/R/plot.R:153:7
  8.           ├─(memoise::memoise(function() {... at 42-resolve-masking/R/plot.R:213:7
  9.           │ ├─base::withVisible(eval(mc, parent.frame()))
 10.           │ └─base::eval(mc, parent.frame())
 11.           │   └─base::eval(mc, parent.frame())
 12.           └─nightowl (local) `<fn>`()
 13.             └─purrr::reduce(...) at 42-resolve-masking/R/plot.R:218:9
 14.               └─purrr:::reduce_impl(.x, .f, ..., .init = .init, .dir = .dir)
 15.                 └─nightowl (local) fn(out, elt, ...)
 16.                   ├─base::eval(parse(text = thiscall)) at 42-resolve-masking/R/plot.R:226:11
 17.                   │ └─base::eval(parse(text = thiscall))
 18.                   ├─base::do.call(nightowl::generic, .y)
 19.                   └─nightowl (local) `<fn>`(...)
 20.                     └─ggplot2 (local) .f(mapping = .aes, ...) at 42-resolve-masking/R/add_plots.R:9:3
 21.                       └─ggplot2::layer(...)
 22.                         └─cli::cli_warn(...)

Error ('test-inline-plots.R:20:3'): inline plots work
Error in `eval(code, test_env)`: attempt to apply non-function
────────────────────────────────────────────────────────────────────────────────
Maximum number of failures exceeded; quitting at end of file.
ℹ Increase this number with (e.g.) `testthat::set_max_fails(Inf)` 

══ Results ═════════════════════════════════════════════════════════════════════
Duration: 29.6 s

── Skipped tests (2) ───────────────────────────────────────────────────────────
• empty test (2): 'test-data.R:1:1', 'test-formula.R:1:1'

── Failed tests ────────────────────────────────────────────────────────────────
Error ('test-coxph.R:130:3'): coxph works
<purrr_error_indexed/rlang_error/error/condition>
Error in `map2(.x, vec_index(.x), .f, ...)`: ℹ In index: 1.
ℹ With name: Overall.
Caused by error in `dplyr::mutate()`:
ℹ In argument: `reference = unlist(purrr::map(as.character(term),
  ~self$get_reference(.x)))`.
Caused by error:
! `reference` must be size 5 or 1, not 3.

Error ('test-donut_plot.R:34:3'): donut_plot works
<vctrs_error_incompatible_size/vctrs_error_incompatible/vctrs_error/rlang_error/error/condition>
Error in `purrr::pmap(params, function(data, column, label, options) {
    if (is.numeric(data[[column]])) {
        do.call(nightowl::make_donut_plot_numeric, c(list(data = data, 
            column = column, split = split, label = label), options))
    }
    else {
        do.call(nightowl::make_donut_plot_categorical, c(list(data = data, 
            column = column, split = split, label = label), options))
    }
})`: Can't recycle `.l$data` (size 3) to match `.l$label` (size 2).
Backtrace:
    ▆
 1. ├─nightowl::donut_plot(...) at test-donut_plot.R:34:3
 2. │ └─purrr::pmap(...) at 42-resolve-masking/R/donut_plot.R:214:3
 3. │   └─purrr:::pmap_("list", .l, .f, ..., .progress = .progress)
 4. │     └─vctrs::vec_size_common(!!!.l, .arg = ".l", .call = .purrr_error_call)
 5. └─vctrs::stop_incompatible_size(...)
 6.   └─vctrs:::stop_incompatible(...)
 7.     └─vctrs:::stop_vctrs(...)
 8.       └─rlang::abort(message, class = c(class, "vctrs_error"), ..., call = call)

Error ('test-forestplot.R:5:3'): multiplication works
Error in `UseMethod("as_html")`: no applicable method for 'as_html' applied to an object of class "c('html', 'character')"
Backtrace:
    ▆
 1. ├─nightowl::as_html(a) %>% class() at test-forestplot.R:5:3
 2. └─nightowl::as_html(a)

Error ('test-frequencies.R:10:3'): frequencies work
Error: 'frequencies' is not an exported object from 'namespace:nightowl'
Backtrace:
    ▆
 1. ├─nightowl::frequencies(x) %>% nightowl::render_kable() at test-frequencies.R:10:3
 2. └─nightowl::render_kable(.)
 3.   └─stringr::str_detect(names(.tbl), "<div") at 42-resolve-masking/R/tables.R:51:5
 4.     └─stringr:::check_lengths(string, pattern)
 5.       └─vctrs::vec_size_common(...)

Error ('test-geom_hillow_median.R:5:3'): geom hillow median works
Error: 'geom_hillow_median' is not an exported object from 'namespace:nightowl'

Error ('test-geom-bootstrap-mean.R:7:3'): geom hillow median works
Error: 'geom_bootstrap_mean' is not an exported object from 'namespace:nightowl'

Error ('test-ggally.R:21:3'): ggally works
<evalError/missingArgError/error/condition>
Error in `(function (data, style, ...) 
{
    mapping <- list(...)
    if (file.exists(style)) {
        style <- yaml::read_yaml(style)
    }
    else {
        style <- nightowl::load_style(style)
    }
    do.call(nightowl::plot, c(list(data = data), list(mapping = mapping), 
        style))
})(DATA = structure(list(Chick = structure(c(15L, 17L, 14L, 11L, 
18L, 12L, 20L, 8L, 5L, 7L, 13L, 16L, 4L, 19L, 3L, 2L, 9L, 1L, 
10L, 6L, 30L, 23L, 24L, 21L, 28L, 27L, 25L, 26L, 29L, 22L, 34L, 
37L, 31L, 39L, 40L, 33L, 32L, 36L, 35L, 38L, 44L, 49L, 43L, 41L, 
42L, 47L, 45L, 50L, 46L, 48L), levels = c("18", "16", "15", "13", 
"9", "20", "10", "8", "17", "19", "4", "6", "11", "3", "1", "12", 
"2", "5", "14", "7", "24", "30", "22", "23", "27", "28", "26", 
"25", "29", "21", "33", "37", "36", "31", "39", "38", "32", "40", 
"34", "35", "44", "45", "43", "41", "47", "49", "46", "50", "42", 
"48"), class = c("ordered", "factor")), `0` = c(42, 40, 43, 42, 
41, 41, 41, 42, 42, 41, 43, 41, 41, 41, 41, 41, 42, 39, 43, 41, 
40, 41, 43, 42, 40, 42, 39, 39, 39, 42, 42, 41, 39, 41, 41, 39, 
41, 41, 42, 41, 42, 42, 42, 42, 41, 40, 41, 39, 40, 41), `2` = c(51, 
49, 39, 49, 42, 49, 49, 50, 51, 44, 51, 49, 48, 49, 49, 45, 51, 
35, 48, 47, 50, 55, 52, 52, 49, 48, 46, 46, 48, 48, 53, 49, 50, 
49, 53, 48, 48, 49, 50, 55, 51, 49, 55, 51, 50, 52, 53, 50, 53, 
54), `4` = c(59, 58, 55, 56, 48, 59, 57, 61, 59, 52, 63, 56, 
53, 62, 56, 49, 61, NA, 55, 54, 62, 64, 61, 58, 62, 57, 58, 58, 
59, 59, 62, 65, 63, 63, 64, 61, 56, 61, 61, 66, 66, 63, 69, 65, 
61, 62, 66, 62, 64, 67), `6` = c(64, 72, 67, 67, 60, 74, 71, 
71, 68, 63, 84, 62, 60, 79, 64, 51, 72, NA, 62, 58, 86, 77, 73, 
74, 78, 74, 73, 73, 74, 72, 73, 82, 77, 85, 87, 76, 68, 74, 78, 
79, 85, 84, 96, 86, 78, 82, 79, 80, 85, 84), `8` = c(76, 84, 
84, 74, 79, 97, 89, 84, 85, 74, 112, 72, 65, 101, 68, 57, 83, 
NA, 65, 65, 125, 90, 90, 66, 102, 93, 87, 92, 87, 85, 85, 107, 
96, 107, 123, 98, 80, 98, 89, 101, 103, 103, 131, 103, 98, 101, 
100, 104, 108, 105), `10` = c(93, 103, 99, 87, 106, 124, 112, 
93, 96, 81, 139, 88, 67, 128, 68, 51, 89, NA, 71, 73, 163, 95, 
103, 68, 124, 114, 100, 114, 106, 98, 102, 129, 111, 134, 158, 
116, 83, 109, 109, 120, 124, 126, 157, 118, 117, 120, 123, 125, 
128, 122), `12` = c(106, 122, 115, 102, 141, 141, 146, 110, 90, 
89, 168, 119, 71, 164, 67, 54, 98, NA, 82, 77, 217, 108, 127, 
70, 146, 136, 115, 145, 134, 115, 123, 159, 137, 164, 201, 145, 
103, 128, 130, 154, 155, 160, 184, 127, 135, 144, 148, 154, 152, 
155), `14` = c(125, 138, 138, 108, 164, 148, 174, 116, 92, 96, 
177, 135, 70, 192, 68, NA, 103, NA, 88, 89, 240, 111, 135, 71, 
164, 147, 123, 156, 150, 122, 138, 179, 144, 186, 238, 166, 112, 
154, 146, 182, 153, 174, 188, 138, 141, 156, 157, 170, 166, 175
), `16` = c(149, 162, 163, 136, 197, 155, 218, 126, 93, 101, 
182, 162, 71, 227, NA, NA, 113, NA, 106, 98, 275, 131, 145, 72, 
197, 169, 144, 184, 187, 143, 170, 221, 151, 235, 287, 198, 135, 
192, 170, 215, 175, 204, 197, 145, 147, 173, 168, 222, 184, 205
), `18` = c(171, 187, 187, 154, 199, 160, 250, 134, 100, 112, 
184, 185, 81, 248, NA, NA, 123, NA, 120, 107, 307, 148, 163, 
72, 231, 205, 163, 207, 230, 151, 204, 263, 146, 294, 332, 227, 
157, 232, 214, 262, 184, 234, 198, 146, 174, 210, 185, 261, 203, 
234), `20` = c(199, 209, 198, 160, 220, 160, 288, 125, 100, 120, 
181, 195, 91, 259, NA, NA, 133, NA, 144, 115, 318, 164, 170, 
76, 259, 236, 185, 212, 279, 157, 235, 291, 156, 327, 361, 225, 
169, 280, 250, 295, 199, 269, 199, NA, 197, 231, 210, 303, 233, 
264), `21` = c(205, 215, 202, 157, 223, 157, 305, NA, 98, 124, 
175, 205, 96, 266, NA, NA, 142, NA, 157, 117, 331, 167, 175, 
74, 265, 251, 192, 233, 309, 150, 256, 305, 147, 341, 373, 220, 
178, 290, 272, 321, 204, 281, 200, NA, 196, 238, 205, 322, 237, 
264)), row.names = c(NA, -50L), class = "data.frame"), style = "Histogram-simple", 
    y = NULL, x = "0")`: argument "data" is missing, with no default
Backtrace:
    ▆
 1. ├─... %>% nightowl::render_svg() at test-ggally.R:21:3
 2. └─nightowl::render_svg(.)
 3.   └─base::tryCatch(...) at 42-resolve-masking/R/svg.r:87:3
 4.     └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 5.       └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 6.         └─value[[3L]](cond)

Error ('test-ggiraph.R:2:3'): ggiraph works
<packageNotFoundError/error/condition>
Error in `loadNamespace(x)`: there is no package called ‘ggiraph’
Backtrace:
    ▆
 1. └─base::loadNamespace(x) at test-ggiraph.R:2:3
 2.   └─base::withRestarts(stop(cond), retry_loadNamespace = function() NULL)
 3.     └─base (local) withOneRestart(expr, restarts[[1L]])
 4.       └─base (local) doWithOneRestart(return(expr), restart)

Error ('test-grouped_chisq.R:10:3'): grouped chisq works
<dplyr:::mutate_error/rlang_error/error/condition>
Error in `dplyr::arrange(., p.value)`: ℹ In argument: `..1 = p.value`.
Caused by error:
! object 'p.value' not found
Backtrace:
     ▆
  1. ├─nightowl::extract_results_grouped_chisq(test) at test-grouped_chisq.R:10:3
  2. │ └─... %>% dplyr::arrange(p.value) at 42-resolve-masking/R/grouped_chisq.R:32:3
  3. ├─dplyr::arrange(., p.value)
  4. ├─dplyr:::arrange.data.frame(., p.value)
  5. │ └─dplyr:::arrange_rows(.data, dots = dots, locale = .locale)
  6. │   ├─dplyr::mutate(data, `:=`("{name}", !!dot), .keep = "none")
  7. │   └─dplyr:::mutate.data.frame(data, `:=`("{name}", !!dot), .keep = "none")
  8. │     └─dplyr:::mutate_cols(.data, dplyr_quosures(...), by)
  9. │       ├─base::withCallingHandlers(...)
 10. │       └─dplyr:::mutate_col(dots[[i]], data, mask, new_columns)
 11. │         └─mask$eval_all_mutate(quo)
 12. │           └─dplyr (local) eval()
 13. └─base::.handleSimpleError(...)
 14.   └─dplyr (local) h(simpleError(msg, call))
 15.     └─rlang::abort(message, class = error_class, parent = parent, call = error_call)

Error ('test-inline-plots.R:20:3'): inline plots work
Error in `eval(code, test_env)`: attempt to apply non-function

[ FAIL 10 | WARN 332 | SKIP 2 | PASS 3 ]
══ Terminated early ════════════════════════════════════════════════════════════
> 
